{"version":3,"sources":["redux/adminActions.js","assets/prof.svg","assets/profBlue.svg","assets/ads.svg","assets/adsBlue.svg","assets/conversationGray.svg","components/Admin/Sidebar.jsx","assets/professorGray2.svg","assets/profWhite.svg","components/Admin/Dashboard.jsx","assets/Search.svg","components/Admin/Users.jsx","components/Admin/AddUser.jsx","components/Admin/EditUser.jsx","components/Admin/Professors.jsx","components/Admin/Institutes.jsx","components/Admin/ViewInstitute.jsx","components/Admin/EditInstitute.jsx","components/Admin/AddInstitute.jsx","components/Admin/Blogs.jsx","components/Admin/AddAdmin.jsx","components/Admin/ViewUser.jsx","components/Admin/EditProfessor.jsx","components/Admin/ViewProfessor.jsx","components/Admin/AddProfessor.jsx","components/Admin/EditAdmin.jsx","components/Admin/AddAdDialog.jsx","components/Admin/EditAdDialog.jsx","components/Admin/Ads.jsx","components/Admin/AddEmailDialog.jsx","components/Admin/EditEmailDialog.jsx","components/Admin/AllowedEmails.jsx","components/Admin/AddFaqDialog.jsx","components/Admin/EditFaqDialog.jsx","components/Admin/Faqs.jsx","components/Admin/EditBlog.jsx","components/Admin/AddBlog.jsx","components/Admin/AboutUs.jsx","components/Admin/Admins.jsx","components/Admin/TeamMembers.jsx","components/Admin/AddMember.jsx","components/Admin/EditMember.jsx","components/Admin/Reports.jsx","components/Admin/ViewReport.jsx","components/Admin/index.jsx"],"names":["setCurrentTab","tab","type","SET_CURRENT_TAB","payload","UserTabs","users","addUser","viewUser","editUser","ProfessorTabs","professors","addProfessor","viewProfessor","editProfessor","InstituteTabs","institutes","addInstitute","viewInstitute","editInstitute","BlogTabs","blogs","addBlog","viewBlog","editBlog","AdminTabs","admins","addAdmin","editAdmin","TeamMembers","teamMembers","addTeamMember","editTeamMember","ReportTabs","reports","viewReport","Sidebar","setOpen","open","useSelector","state","currentTab","admin","account","dispatch","useDispatch","className","src","beardGuy","alt","Typography","variant","name","IconButton","onClick","ArrowLeft","htmlColor","ArrowRight","Divider","List","ListItemButton","data","ListItemIcon","Dashboard","ListItemText","primary","People","profBlue","professor","Festival","Assignment","Report","Settings","Groups","adsBlue","ads","MailOutline","conversations","conversationGray","useState","Date","date","setDate","professorGray","professorIcon","setProfessorIcon","countAll","useQuery","COUNT_ALL","fetchPolicy","ratingsQuery","RATINGS","resultSet","setResultSet","label","useEffect","ratings","rs","i","push","j","length","rate","createdAt","getFullYear","getMonth","index","getDate","calculateResulSet","loading","CircularProgress","Grid","container","rowSpacing","columnSpacing","item","xs","md","lg","allUsers","allInstitutes","onMouseEnter","professorWhite","onMouseLeave","allFaculties","Star","allRatings","moment","format","at","axes","position","tooltip","style","maxHeight","maxWidth","minWidth","minHeight","LocalizationProvider","dateAdapter","AdapterDateFns","CalendarPicker","onChange","newDate","Users","React","offset","setOffset","searchValue","setSearchValue","USERS","variables","limit","facultiesQuery","FACULTIES","institutesQuery","INSTITUTES","TextField","size","value","e","target","toLowerCase","placeholder","InputProps","startAdornment","InputAdornment","Search","Button","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","filter","usr","firstName","includes","map","u","_id","email","from","registeredAt","r","user","faculties","off","ChevronLeft","ChevronRight","AddUser","useMutation","NEW_USER","refetchQueries","query","newUser","schema","yup","required","min","lastName","password","confirmPassword","oneOf","formik","useFormik","initialValues","validationSchema","onSubmit","values","then","addToast","message","severity","catch","Card","elevation","component","handleSubmit","fullWidth","handleChange","error","touched","Boolean","errors","helperText","disabled","EditUser","UPDATE_USER","updateUser","id","Number","Professors","FACULTIES_AND_INSTITUTES","faculty","find","institute","instituteName","Institutes","inst","FACULTIES_BY_INSTITUTE","DELETE_INSTITUTE","deleteInstitue","deleteMutation","color","EditInstitute","courses","setCourses","currentText","setCurrentText","UPDATE_INSTITUTE","updateInstitute","course","Chip","deleteIcon","Clear","onDelete","c","toUpperCase","handleDelete","endAdornment","trim","Add","AddInstitute","NEW_INSTITUTE","newInstitute","Blogs","BLOGS","DELETE_BLOG","deleteBlog","blg","title","blog","Visibility","DeleteForever","allBlogs","AddAdmin","NEW_ADMIN","ADMINS","newAdmin","ViewUser","DELETE_USER","deleteUser","DELETE_RATING","deleteRating","ratingQuery","align","rating","thoughts","fac","f","EditProfessor","currentInstId","setCurrentInstId","UPDATE_FACULTY","updateFaculty","department","calculateRatings","total","forEach","overAllRating","toFixed","Rating","classes","iconFilled","Select","MenuItem","ViewProfessor","DELETE_FACULTY","deleteFaculty","AddProfessor","NEW_FACULTY","newFaculty","EditAdmin","currentAdmin","UPDATE_ADMIN","updateAdmin","newPassword","status","logout","login","role","AddAdDialog","handleClose","NEW_AD","newAd","locationId","code","Dialog","components","onClose","paper","DialogTitle","DialogContent","DialogActions","EditAdDialog","ad","handleUpdate","Ads","openNewAdDialog","setOpenNewAdDialog","updateAd","setUpdateAd","openUpdateAdDialog","setOpenUpdateAdDialog","ADS","UPDATE_AD","update","DELETE_AD","deleteAd","updatedAd","a","event","handleStatusChange","doUpdateAd","allAds","emailDomain","isAllowed","newEmail","setNewEmail","NEW_ALLOWED_EMAIL","ALLOWED_EMAILS","newAllowedEmail","AddEmailDialog","AllowedEmails","openNewEmailDialog","setOpenNewEmailDialog","updateEmail","setUpdateEmail","openUpdateEmailDialog","setOpenUpdateEmailDialog","UPDATE_ALLOWED_EMAIL","DELETE_EMAIL","deleteEmail","updatedEmail","allowedEmails","doUpdateEmail","allAllowedEmails","AddFaqDialog","NEW_FAQ","FAQS","newFaq","answer","category","faq","UPDATE_FAQ","updateFaq","Faqs","openNewFaqDialog","setOpenNewFaqDialog","setUpdateFaq","openUpdateFaqDialog","setOpenUpdateFaqDialog","DELETE_FAQ","deleteFaq","faqs","doUpdateFaq","allFaqs","EditBlog","tags","setTags","UPDATE_BLOG","updateBlog","content","justifyContent","config","readonly","onBlur","newContent","setFieldValue","AddBlog","NEW_BLOG","newBlog","writtenBy","AboutUs","ourStory","whoWeAre","setState","UPDATE_ABOUT_US","ABOUT_US","updateAboutUs","multiline","Admins","aboutUsQuery","DELETE_ADMIN","deleteAdmin","adm","allAdmins","aboutUs","MEMBERS","DELETE_MEMBER","deleteMember","members","member","allMembers","defaultProps","getBase64Image","img","fd","FormData","append","fetch","process","method","body","json","result","AddMember","NEW_MEMBER","newMember","imgRef","useRef","urlRegex","image","test","facebookLink","matches","instagramLink","linkedinLink","current","files","imageURI","URL","createObjectURL","accept","ref","EditMember","UPDATE_MEMBER","updateMember","Reports","REPORTS","usersQuery","DELETE_REPORT","deleteReport","rpt","summary","rt","reportingUser","allReports","ViewReport","report","details","semester","likes","disLikes","Admin","isMediumOrLargerScreen","useMediaQuery","theme","breakpoints","up","Drawer","Menu","sessionStorage","removeItem","localStorage","Logout","to"],"mappings":"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","file":"static/js/4.da4fa287.chunk.js","sourcesContent":["import { ADD_USER, SET_CURRENT_TAB } from './adminActionTypes';\n\nexport function setCurrentTab(tab) {\n  return {\n    type: SET_CURRENT_TAB,\n    payload: {\n      tab,\n    },\n  };\n}\n\nexport function addUser(user) {\n  return {\n    type: ADD_USER,\n    payload: {\n      user,\n    },\n  };\n}\n","export default __webpack_public_path__ + \"static/media/prof.05af1b73.svg\";","export default __webpack_public_path__ + \"static/media/profBlue.5816c4ab.svg\";","export default __webpack_public_path__ + \"static/media/ads.78eef4a7.svg\";","export default __webpack_public_path__ + \"static/media/adsBlue.839eff57.svg\";","export default __webpack_public_path__ + \"static/media/conversationGray.796db599.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@mui/material';\n\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Assignment,\n  Dashboard,\n  Festival,\n  People,\n  Settings,\n  Groups,\n  MailOutline,\n  Report,\n} from '@mui/icons-material';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nimport beardGuy from '../../assets/beardGuy.svg';\nimport professor from '../../assets/prof.svg';\nimport profBlue from '../../assets/profBlue.svg';\nimport ads from '../../assets/ads.svg';\nimport adsBlue from '../../assets/adsBlue.svg';\nimport conversations from '../../assets/conversations.svg';\nimport conversationGray from '../../assets/conversationGray.svg';\n\nconst UserTabs = {\n  users: true,\n  addUser: true,\n  viewUser: true,\n  editUser: true,\n};\n\nconst ProfessorTabs = {\n  professors: true,\n  addProfessor: true,\n  viewProfessor: true,\n  editProfessor: true,\n};\n\nconst InstituteTabs = {\n  institutes: true,\n  addInstitute: true,\n  viewInstitute: true,\n  editInstitute: true,\n};\n\nconst BlogTabs = {\n  blogs: true,\n  addBlog: true,\n  viewBlog: true,\n  editBlog: true,\n};\n\nconst AdminTabs = {\n  admins: true,\n  addAdmin: true,\n  editAdmin: true,\n};\n\nconst TeamMembers = {\n  teamMembers: true,\n  addTeamMember: true,\n  editTeamMember: true,\n};\n\nconst ReportTabs = {\n  reports: true,\n  viewReport: true,\n};\n\nexport default function Sidebar({ setOpen, open }) {\n  const { admin: { currentTab }, account: { admin } } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"flex flex-col w-full h-full\">\n      <div className=\"w-full p-3 mt-12\">\n        <img className=\"w-16\" src={beardGuy} alt=\"man\" />\n        <span className={`flex items-center ${open ? 'justify-between' : 'justify-center'} w-full mt-6`}>\n          <Typography variant=\"h4\" className={`${open ? 'block' : 'hidden'}`}>{ admin.name }</Typography>\n          <IconButton className=\"p-1 rounded-none bg-primary hover:bg-blue-800\" onClick={() => setOpen(!open)}>\n            {\n              open\n                ? (\n                  <ArrowLeft htmlColor=\"white\" className=\"w-5 h-5\" />\n                )\n                : (\n                  <ArrowRight htmlColor=\"white\" className=\"w-5 h-5\" />\n                )\n            }\n          </IconButton>\n        </span>\n      </div>\n      <Divider />\n      <List>\n        <ListItemButton className={`${currentTab.name === 'dashboard' && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'dashboard', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Dashboard className={`${currentTab.name === 'dashboard' && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Dasboard\" />\n        </ListItemButton>\n        <ListItemButton className={`${UserTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'users', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><People className={`${UserTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Users\" />\n        </ListItemButton>\n        <ListItemButton className={`${ProfessorTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'professors', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><img src={ProfessorTabs[currentTab.name] ? profBlue : professor} alt=\"professors\" className={`${currentTab.name === 'professors' && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Professors\" />\n        </ListItemButton>\n        <ListItemButton className={`${InstituteTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'institutes', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Festival className={`${InstituteTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Institutes\" />\n        </ListItemButton>\n        <ListItemButton className={`${BlogTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'blogs', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Assignment className={`${BlogTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Blogs\" />\n        </ListItemButton>\n        <ListItemButton className={`${ReportTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'reports', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Report className={`${ReportTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Reports\" />\n        </ListItemButton>\n      </List>\n      <Divider />\n      <List>\n        <ListItemButton className={`${AdminTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'admins', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Settings className={`${AdminTabs[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Admin Settings\" />\n        </ListItemButton>\n      </List>\n      <List>\n        <ListItemButton className={`${TeamMembers[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'teamMembers', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><Groups className={`${TeamMembers[currentTab.name] && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Team Members\" />\n        </ListItemButton>\n      </List>\n      <List>\n        <ListItemButton className={`${currentTab.name === 'ads' && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'ads', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><img src={currentTab.name === 'ads' ? adsBlue : ads} alt=\"advertisemnts\" className={`${currentTab.name === 'ads' && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Ads\" />\n        </ListItemButton>\n      </List>\n      <List>\n        <ListItemButton className={`${currentTab.name === 'allowedMails' && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'allowedMails', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><MailOutline className={`${currentTab.name === 'allowedMails' && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Allowed Mails\" />\n        </ListItemButton>\n      </List>\n      <List>\n        <ListItemButton className={`${currentTab.name === 'faqs' && 'bg-activeTab text-primary'} hover:bg-activeTab`} onClick={() => dispatch(setCurrentTab({ name: 'faqs', data: null }))}>\n          <ListItemIcon className={`${!open && 'flex justify-center'}`}><img src={currentTab.name === 'faqs' ? conversations : conversationGray} alt=\"faqs\" className={`${currentTab.name === 'faqs' && 'bg-activeTab text-primary'} hover:bg-activeTab w-8 h-8`} /></ListItemIcon>\n          <ListItemText className={`${!open && 'hidden'}`} primary=\"Faq's\" />\n        </ListItemButton>\n      </List>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  setOpen: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/professorGray2.5cf1cdf1.svg\";","export default __webpack_public_path__ + \"static/media/profWhite.7ff3ae31.svg\";","import React, { useEffect, useState } from 'react';\n\nimport { Chart } from 'react-charts';\n\nimport {\n  Grid,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  People,\n  Star,\n  Festival,\n} from '@mui/icons-material';\n\nimport {\n  LocalizationProvider,\n  CalendarPicker,\n} from '@mui/lab';\n\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\n\nimport moment from 'moment';\n\nimport { useQuery } from '@apollo/client';\n\nimport professorGray from '../../assets/professorGray2.svg';\nimport professorWhite from '../../assets/profWhite.svg';\n\nimport { COUNT_ALL, RATINGS } from '../../graphqlQueries';\n\nfunction calculateResulSet(ratings, date) {\n  const rs = [[0, 0]];\n  for (let i = 1; i <= 31; i += 1) {\n    rs.push([i, 0]);\n  }\n  for (let j = 0; j < ratings.length; j += 1) {\n    const rate = ratings[j];\n    const createdAt = new Date(rate.createdAt);\n    if (createdAt.getFullYear() === date.getFullYear()\n        && createdAt.getMonth() === date.getMonth()) {\n      const index = createdAt.getDate();\n      rs[index] = [index, rs[index][1] + 1];\n    }\n  }\n  return rs;\n}\n\nexport default function Dashboard() {\n  const [date, setDate] = useState(new Date());\n  const [professorIcon, setProfessorIcon] = useState(professorGray);\n  const countAll = useQuery(COUNT_ALL, { fetchPolicy: 'cache-and-network' });\n  const ratingsQuery = useQuery(RATINGS, { fetchPolicy: 'cache-and-network' });\n  const [resultSet, setResultSet] = useState([[0, 0]]);\n  const data = [\n    {\n      label: 'Reviews',\n      data: resultSet || [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]],\n    },\n  ];\n  const axes = [\n    { primary: true, type: 'linear', position: 'bottom' },\n    { type: 'linear', position: 'left' },\n  ];\n  useEffect(() => {\n    if (ratingsQuery.data) {\n      setResultSet(calculateResulSet(ratingsQuery.data.ratings, date));\n    }\n  }, [ratingsQuery.data, date]);\n  if (countAll.loading || ratingsQuery.loading) return <div className=\"absolute inset-0 flex items-center justify-center\"><CircularProgress /></div>;\n  return (\n    <div className=\"w-full px-4 pt-16\">\n      <Grid container rowSpacing={9} columnSpacing={4}>\n        <Grid item xs={12} md={7} lg={8} className=\"flex flex-col gap-6\">\n          <div className=\"flex flex-wrap justify-center gap-3 md:justify-between\">\n            <div className=\"flex flex-col items-center w-40 px-6 py-4 text-gray-400 bg-white border hover:filter hover:drop-shadow-xl hover:bg-primary hover:text-white\">\n              <People className=\"w-12 h-12\" />\n              <Typography className=\"text-3xl font-medium text-inherit\">{countAll.data.allUsers}</Typography>\n              <Typography className=\"text-sm text-inherit\">Total Users</Typography>\n            </div>\n            <div className=\"flex flex-col items-center w-40 px-6 py-4 text-gray-400 bg-white border hover:filter hover:drop-shadow-xl hover:bg-primary hover:text-white\">\n              <Festival className=\"w-12 h-12\" />\n              <Typography className=\"text-3xl font-medium text-inherit\">{countAll.data.allInstitutes}</Typography>\n              <Typography className=\"text-sm text-inherit\">Total Institutes</Typography>\n            </div>\n            <div\n              onMouseEnter={() => setProfessorIcon(professorWhite)}\n              onMouseLeave={() => setProfessorIcon(professorGray)}\n              className=\"flex flex-col items-center w-40 px-6 py-4 text-gray-400 bg-white border hover:filter hover:drop-shadow-xl hover:bg-primary hover:text-white\"\n            >\n              <img src={professorIcon} alt=\"professor\" className=\"w-12 h-12\" />\n              <Typography className=\"text-3xl font-medium text-inherit\">{countAll.data.allFaculties}</Typography>\n              <Typography className=\"text-sm text-inherit\">Total Professors</Typography>\n            </div>\n            <div className=\"flex flex-col items-center w-40 px-6 py-4 text-gray-400 bg-white border hover:filter hover:drop-shadow-xl hover:bg-primary hover:text-white\">\n              <Star className=\"w-12 h-12\" />\n              <Typography className=\"text-3xl font-medium text-inherit\">{countAll.data.allRatings}</Typography>\n              <Typography className=\"text-sm text-inherit\">Total Reviews</Typography>\n            </div>\n          </div>\n          <div className=\"w-full bg-white\">\n            <Typography variant=\"h3\">\n              Review Chart:&nbsp;\n              <small>\n                Total Reviews on&nbsp;\n                {moment(date).format('DD-MM-YYYY')}\n                &nbsp;\n                are\n                &nbsp;\n                {resultSet[date.getDate()]?.at(1)}\n              </small>\n            </Typography>\n            <div className=\"w-full h-60 md:h-96\">\n              <Chart data={data} axes={axes} tooltip />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={5} lg={4} className=\"flex items-start justify-center\">\n          <div\n            style={{\n              maxHeight: '350px',\n              maxWidth: '380px',\n              minWidth: '380px',\n              minHeight: '350px',\n            }}\n          >\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <CalendarPicker\n                date={date}\n                onChange={(newDate) => setDate(newDate)}\n                className=\"bg-white\"\n              />\n            </LocalizationProvider>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Search.1017d124.svg\";","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport { useQuery } from '@apollo/client';\n\nimport moment from 'moment';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  USERS, RATINGS, FACULTIES, INSTITUTES,\n} from '../../graphqlQueries';\n\nexport default function Users() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(USERS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const ratingsQuery = useQuery(RATINGS);\n  const facultiesQuery = useQuery(FACULTIES);\n  const institutesQuery = useQuery(INSTITUTES);\n  function nextPage() {\n    if (data && offset < data.allUsers) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Users</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value.toLowerCase())}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-8\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addUser', data: null }))}>Add Users</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Name</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Email</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Register</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Reviews</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && !ratingsQuery.loading && !institutesQuery.loading\n            && !facultiesQuery.loading && data && (\n              <TableBody>\n                {\n                  data?.users.filter(\n                    (usr) => usr.firstName.toLowerCase().includes(searchValue),\n                  ).map((u) => (\n                    <TableRow key={u._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{u._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{u.firstName}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{u.email}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{moment().from(u.registeredAt)}</TableCell>\n                      <TableCell\n                        className=\"cursor-pointer text-primary\"\n                        onClick={() => dispatch(setCurrentTab(\n                          {\n                            name: 'viewUser',\n                            data: {\n                              ...u,\n                              ratings: ratingsQuery.data?.ratings.filter(\n                                (r) => r.user === u._id,\n                              ) || [],\n                              faculties: facultiesQuery.data.faculties,\n                              institutes: institutesQuery.data.institutes,\n                            },\n                          },\n                        ))}\n                      >\n                        View more\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allUsers ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { NEW_USER, USERS, COUNT_ALL } from '../../graphqlQueries';\n\nexport default function AddUser() {\n  const dispatch = useDispatch();\n  const [newUser, { loading }] = useMutation(\n    NEW_USER, { refetchQueries: [{ query: USERS }, { query: COUNT_ALL }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    firstName: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    lastName: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    password: yup.string().min(8, 'Password should be at least 8 characters long').required('Password is required'),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newUser({ variables: values })\n      .then(() => dispatch(addToast({ message: 'User added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Add User</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formik.values.lastName}\n          onChange={formik.handleChange}\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n          helperText={formik.touched.lastName && formik.errors.lastName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          variant=\"standard\"\n          type=\"password\"\n          fullWidth\n          required\n          label=\"Password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <TextField\n          variant=\"standard\"\n          type=\"password\"\n          fullWidth\n          required\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n          helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n        />\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Add'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { UPDATE_USER, USERS } from '../../graphqlQueries';\n\nexport default function EditUser({ user }) {\n  const dispatch = useDispatch();\n  const [updateUser, { loading }] = useMutation(\n    UPDATE_USER,\n    { refetchQueries: [{ query: USERS }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    firstName: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    lastName: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    password: yup.string().min(8, 'Password should be at least 8 characters long'),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      password: user.password,\n      confirmPassword: user.password,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateUser({ variables: { ...values, id: Number(user._id) } })\n      .then(() => dispatch(addToast({ message: 'User updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Edit User</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formik.values.lastName}\n          onChange={formik.handleChange}\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n          helperText={formik.touched.lastName && formik.errors.lastName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          variant=\"standard\"\n          type=\"password\"\n          fullWidth\n          label=\"Password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <TextField\n          variant=\"standard\"\n          type=\"password\"\n          fullWidth\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n          helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n        />\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Update'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n\nEditUser.propTypes = {\n  user: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport { useQuery } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport { FACULTIES_AND_INSTITUTES, RATINGS } from '../../graphqlQueries';\n\nexport default function Professors() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(FACULTIES_AND_INSTITUTES, { variables: { offset, limit: 10 }, fetchPolicy: 'cache-and-network' });\n  const ratingsQuery = useQuery(RATINGS);\n  function nextPage() {\n    if (data && offset < data.allFaculties) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Professors</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addProfessor', data: null }))}>Add professors</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Name</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Email</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">University</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Reviews</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && !ratingsQuery.loading && data && (\n              <TableBody>\n                {\n                  data?.faculties.filter(\n                    (faculty) => faculty.firstName.toLowerCase().includes(searchValue),\n                  ).map((faculty) => (\n                    <TableRow key={faculty.id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{faculty._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{faculty.firstName}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{faculty.email}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">\n                        {\n                          data.institutes.find(\n                            (i) => i._id === faculty.institute,\n                          ).name\n                        }\n                      </TableCell>\n                      <TableCell\n                        className=\"cursor-pointer text-primary\"\n                        onClick={() => dispatch(setCurrentTab({\n                          name: 'viewProfessor',\n                          data: {\n                            ...faculty,\n                            institute: Number(faculty.institute),\n                            ratings: ratingsQuery.data.ratings.filter(\n                              (r) => r.faculty === faculty._id,\n                            ),\n                            instituteName: data.institutes.find(\n                              (i) => i._id === faculty.institute,\n                            ).name,\n                          },\n                        }))}\n                      >\n                        View more\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allFaculties ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport moment from 'moment';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport { useQuery } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport { INSTITUTES } from '../../graphqlQueries';\n\nexport default function Institutes() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const { loading, data } = useQuery(INSTITUTES, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const [searchValue, setSearchValue] = React.useState('');\n  function nextPage() {\n    if (data && offset < data.allInstitutes) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Institutes</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addInstitute', data: null }))}>Add Institutes</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Name</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Email</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Register</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Reviews</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && (\n              <TableBody>\n                {\n                  data?.institutes.filter(\n                    (inst) => inst.name.toLowerCase().includes(searchValue),\n                  ).map((institute) => (\n                    <TableRow key={institute.id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{institute._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{institute.name}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{institute.email}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{moment().from(institute.registeredAt)}</TableCell>\n                      <TableCell className=\"cursor-pointer text-primary\" onClick={() => dispatch(setCurrentTab({ name: 'viewInstitute', data: institute }))}>View more</TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allInstitutes ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Button,\n  Card,\n  IconButton,\n  TextField,\n  InputAdornment,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  FACULTIES_BY_INSTITUTE, DELETE_INSTITUTE, INSTITUTES,\n  RATINGS,\n} from '../../graphqlQueries';\n\nimport Search from '../../assets/Search.svg';\n\nexport default function viewInstitute({ institute }) {\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ratingsQuery = useQuery(RATINGS);\n  const { loading, data } = useQuery(\n    FACULTIES_BY_INSTITUTE,\n    { variables: { institute: Number(institute._id) } },\n  );\n  const [deleteInstitue, deleteMutation] = useMutation(\n    DELETE_INSTITUTE,\n    { refetchQueries: [{ query: INSTITUTES }, { query: FACULTIES_BY_INSTITUTE }] },\n  );\n  function handleDelete() {\n    deleteInstitue({ variables: { id: Number(institute._id) } })\n      .then(() => dispatch(addToast({ message: 'Institute deleted successfully', severity: 'success' })))\n      .catch((e) => dispatch(addToast({ message: e.message, severity: 'error' })));\n    dispatch(setCurrentTab({ name: 'institutes', data: null }));\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">{`${institute._id} - ${institute.name}`}</Typography>\n        <div className=\"flex-grow\" />\n        <Button variant=\"contained\" onClick={() => handleDelete()} disabled={deleteMutation.loading} color=\"error\" className=\"h-full px-9 shadow-redGlow\">\n          {\n            deleteMutation.loading\n              ? <CircularProgress />\n              : 'Delete Institute'\n          }\n        </Button>\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'editInstitute', data: institute }))}>Edit Institute</Button>\n      </div>\n      <Card className=\"flex flex-col w-full gap-6 px-4 py-5 md:py-10 md:px-8\" elevation={6}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center justify-items-end\">\n            <Typography className=\"text-3xl text-gray-400\">Professors</Typography>\n            <div className=\"flex-grow\" />\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              placeholder=\"Search...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <img src={Search} alt=\"search icon\" className=\"h-9\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div>\n            <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n                    <TableCell className=\"font-semibold leading-9 text-gray-400\">Name</TableCell>\n                    <TableCell className=\"font-semibold leading-9 text-gray-400\">Email</TableCell>\n                    <TableCell className=\"font-semibold leading-9 text-gray-400\">University</TableCell>\n                    <TableCell className=\"font-semibold leading-9 text-gray-400\">Reviews</TableCell>\n                  </TableRow>\n                </TableHead>\n                {\n                  !loading && !ratingsQuery.loading && data && (\n                    <TableBody>\n                      {\n                        data?.faculties.filter(\n                          (faculty) => faculty.firstName.toLowerCase().includes(searchValue),\n                        ).map((faculty) => (\n                          <TableRow key={faculty.id} className=\"hover:shadow-md\">\n                            <TableCell className=\"m-3 leading-9 text-gray-400\">{faculty._id}</TableCell>\n                            <TableCell className=\"text-lg font-semibold text-black\">{faculty.firstName}</TableCell>\n                            <TableCell className=\"leading-9 text-gray-400\">{faculty.email}</TableCell>\n                            <TableCell className=\"leading-9 text-gray-400\">\n                              {\n                                institute.name\n                              }\n                            </TableCell>\n                            <TableCell\n                              className=\"cursor-pointer text-primary\"\n                              onClick={() => dispatch(setCurrentTab(\n                                {\n                                  name: 'viewProfessor',\n                                  data: {\n                                    ...faculty,\n                                    institute:\n                                    Number(faculty.institute),\n                                    instituteName: institute.name,\n                                    ratings: ratingsQuery.data.ratings.filter(\n                                      (r) => r.faculty === faculty._id,\n                                    ),\n                                  },\n                                },\n                              ))}\n                            >\n                              View more\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      }\n                    </TableBody>\n                  )\n                }\n                {\n                  loading && ratingsQuery.loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n                }\n              </Table>\n            </TableContainer>\n          </div>\n        </div>\n      </Card>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className=\"bg-gray-400 rounded-none shadow-lg\">\n          <ChevronLeft className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className=\"rounded-none shadow-lg bg-primary\">\n          <ChevronRight className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nviewInstitute.propTypes = {\n  institute: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    courses: PropTypes.array.isRequired,\n    faculties: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CircularProgress,\n  Chip,\n} from '@mui/material';\n\nimport { Clear, Add } from '@mui/icons-material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { INSTITUTES, UPDATE_INSTITUTE } from '../../graphqlQueries';\n\nexport default function EditInstitute({ institute }) {\n  // Chip select requirements\n  const [courses, setCourses] = React.useState(institute.courses);\n  const [currentText, setCurrentText] = React.useState('');\n  function handleDelete(course) {\n    setCourses(courses.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------------------\n  const dispatch = useDispatch();\n  const [updateInstitute, { loading }] = useMutation(\n    UPDATE_INSTITUTE,\n    { refetchQueries: [{ query: INSTITUTES }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    name: yup.string().required('Name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: institute.name,\n      email: institute.email,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateInstitute(\n      { variables: { ...values, courses, id: Number(institute._id) } },\n    )\n      .then(() => dispatch(addToast({ message: 'Institute updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col items-center w-full mb-3 md:justify-between md:flex-row\">\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Edit Institutes</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Name\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <div className=\"flex flex-wrap w-full gap-3 p-3\">\n          <Typography className=\"w-full -ml-2 text-sm\">Courses</Typography>\n          {\n            courses.map(\n              (course) => (\n                <Chip\n                  key={course}\n                  label={course}\n                  deleteIcon={<Clear />}\n                  onDelete={() => handleDelete(course)}\n                />\n              ),\n            )\n          }\n          <TextField\n            fullWidth\n            variant=\"standard\"\n            value={currentText}\n            onChange={(e) => setCurrentText(e.target.value.toUpperCase())}\n            InputProps={{\n              endAdornment: (\n                <Button\n                  variant=\"outlined\"\n                  className=\"mb-0.5\"\n                  onClick={() => {\n                    if (currentText === '') return;\n                    setCourses([...courses, currentText.trim()]);\n                    setCurrentText('');\n                  }}\n                >\n                  <Add />\n                </Button>\n              ),\n            }}\n          />\n        </div>\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Update'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n\nEditInstitute.propTypes = {\n  institute: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    courses: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Clear, Add } from '@mui/icons-material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { NEW_INSTITUTE, INSTITUTES, COUNT_ALL } from '../../graphqlQueries';\n\nexport default function AddInstitute() {\n  // Chip select requirements\n  const [courses, setCourses] = React.useState([]);\n  const [currentText, setCurrentText] = React.useState('');\n  function handleDelete(course) {\n    setCourses(courses.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------------------\n  const dispatch = useDispatch();\n  const [newInstitute, { loading }] = useMutation(\n    NEW_INSTITUTE,\n    { refetchQueries: [{ query: INSTITUTES }, { query: COUNT_ALL }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    name: yup.string().required('Name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newInstitute({ variables: { ...values, courses } })\n      .then(() => dispatch(addToast({ message: 'Institute added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Add Institute</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Name\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <div className=\"flex flex-wrap w-full gap-3 p-3\">\n          <Typography className=\"w-full -ml-2 text-sm\">Courses</Typography>\n          {\n            courses.map(\n              (course) => (\n                <Chip\n                  key={course}\n                  label={course}\n                  deleteIcon={<Clear />}\n                  onDelete={() => handleDelete(course)}\n                />\n              ),\n            )\n          }\n          <TextField\n            fullWidth\n            variant=\"standard\"\n            value={currentText}\n            onChange={(e) => setCurrentText(e.target.value.toUpperCase())}\n            InputProps={{\n              endAdornment: (\n                <Button\n                  variant=\"outlined\"\n                  className=\"mb-0.5\"\n                  onClick={() => {\n                    if (currentText === '') return;\n                    setCourses([...courses, currentText.trim()]);\n                    setCurrentText('');\n                  }}\n                >\n                  <Add />\n                </Button>\n              ),\n            }}\n          />\n        </div>\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Add'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  DeleteForever,\n  Visibility,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport moment from 'moment';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  BLOGS, DELETE_BLOG,\n} from '../../graphqlQueries';\n\nexport default function Blogs() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(BLOGS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const [deleteBlog] = useMutation(DELETE_BLOG, { refetchQueries: [{ query: BLOGS }] });\n  function handleDelete(_id) {\n    deleteBlog({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Blog deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allBlogs) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Posts</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={setSearchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addBlog', data: null }))}>Add Post</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold text-gray-400\">ID</TableCell>\n              <TableCell className=\"text-lg font-semibold text-gray-400\">Title</TableCell>\n              <TableCell className=\"font-semibold text-gray-400\">Register</TableCell>\n              <TableCell className=\"font-semibold text-center text-gray-400\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && data && (\n              <TableBody>\n                {\n                  data?.blogs.filter(\n                    (blg) => blg.title.toLowerCase().includes(searchValue),\n                  ).map((blog) => (\n                    <TableRow key={blog._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{blog._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{blog.title}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{moment().from(blog.registeredAt)}</TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton onClick={() => dispatch(setCurrentTab({ name: 'editBlog', data: blog }))}><Visibility /></IconButton>\n                        <IconButton\n                          onClick={() => handleDelete(blog._id)}\n                        >\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allBlogs ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  Card,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { ADMINS, NEW_ADMIN } from '../../graphqlQueries';\n\nexport default function AddAdmin() {\n  const dispatch = useDispatch();\n  const [newAdmin, { loading }] = useMutation(\n    NEW_ADMIN,\n    { refetchQueries: [{ query: ADMINS }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    name: yup.string().required('Name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    password: yup.string().min(8, 'Password should be at least 8 characters long').required('Password is required'),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm password is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newAdmin({ variables: values })\n      .then(() => dispatch(addToast({ message: 'Admin added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Grid container rowSpacing={5} columnSpacing={15}>\n        <Grid item xs={12}>\n          <Typography className=\"text-4xl font-medium text-gray-500 pb-9\">Add Admin</Typography>\n          <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              required\n              label=\"Name\"\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              required\n              label=\"Email\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n            <TextField\n              variant=\"standard\"\n              type=\"password\"\n              fullWidth\n              required\n              label=\"Password\"\n              name=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n            <TextField\n              variant=\"standard\"\n              type=\"password\"\n              fullWidth\n              required\n              label=\"Confirm Password\"\n              name=\"confirmPassword\"\n              value={formik.values.confirmPassword}\n              onChange={formik.handleChange}\n              error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n              helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n            />\n            <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n              {\n                loading\n                  ? <CircularProgress />\n                  : 'Add'\n              }\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Button,\n  Card,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport moment from 'moment';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  DELETE_USER, USERS, RATINGS, DELETE_RATING,\n} from '../../graphqlQueries';\n\nexport default function ViewUser({ user }) {\n  const dispatch = useDispatch();\n  const [deleteUser, { loading }] = useMutation(\n    DELETE_USER,\n    { refetchQueries: [{ query: USERS }] },\n  );\n  const [deleteRating, ratingQuery] = useMutation(\n    DELETE_RATING,\n    { refetchQueries: [{ query: RATINGS }, { query: USERS }] },\n  );\n  function handleDelete() {\n    deleteUser({ variables: { id: Number(user._id) } })\n      .then(() => {\n        dispatch(addToast({ message: 'Deleted User successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'users', data: null }));\n      })\n      .catch((error) => dispatch(addToast({ message: error.message, severity: 'error' })));\n  }\n  function handleRatingDelete(id) {\n    deleteRating({ variables: { id: Number(id) } })\n      .then(() => {\n        dispatch(addToast({ message: 'Deleted rating successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'users', data: null }));\n      })\n      .catch((error) => dispatch(addToast({ message: error.message, severity: 'error' })));\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">{`${user._id} - ${user.firstName} ${user.lastName}`}</Typography>\n        <div className=\"flex-grow\" />\n        <Button variant=\"contained\" disabled={loading} onClick={() => handleDelete()} color=\"error\" className=\"h-full px-9 shadow-redGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Delete User'\n          }\n        </Button>\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'editUser', data: user }))}>Edit User</Button>\n      </div>\n      <Card className=\"flex flex-col w-full gap-6 px-4 py-5 md:py-10 md:px-8\" elevation={6}>\n        {\n          user.ratings.length === 0 && <Typography variant=\"h6\" color=\"primary\" align=\"center\">No ratings yet</Typography>\n        }\n        {\n          user.ratings.map(\n            (rating) => (\n              <div className=\"flex flex-col w-full p-5 bg-gray-200 rounded-lg\">\n                <div className=\"flex justify-between gap-3\">\n                  <Typography className=\"text-lg font-semibold\">{rating.thoughts}</Typography>\n                  <Typography className=\"text-sm text-gray-500\">\n                    {\n                      (() => { // IIFE\n                        const fac = user.faculties.find((f) => f._id === rating.faculty);\n                        if (!fac) return '';\n                        const inst = user.institutes.find((i) => i._id === fac.institute);\n                        if (!inst) return '';\n                        return inst.name;\n                      })()\n                    }\n                  </Typography>\n                </div>\n                <div className=\"flex mt-3 gap-9\">\n                  <Typography className=\"text-sm text-gray-500\">{rating.course}</Typography>\n                  <Typography className=\"text-sm font-medium text-gray-700\">{moment(rating.createdAt).format('MMMM DD, YYYY')}</Typography>\n                </div>\n                <div className=\"flex justify-between gap-3 mt-9\">\n                  <Typography className=\"text-sm font-medium text-gray-700\">\n                    {\n                      user.faculties.find((f) => f._id === rating.faculty)?.firstName || ''\n                    }\n                  </Typography>\n                  <Button variant=\"contained\" disabled={ratingQuery.loading} color=\"error\" className=\"px-9 shadow-redGlow\" onClick={() => handleRatingDelete(rating._id)}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            ),\n          )\n        }\n      </Card>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className=\"bg-gray-400 rounded-none shadow-lg\">\n          <ChevronLeft className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className=\"rounded-none shadow-lg bg-primary\">\n          <ChevronRight className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nViewUser.propTypes = {\n  user: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    ratings: PropTypes.array.isRequired,\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    confirmPassword: PropTypes.string.isRequired,\n    faculties: PropTypes.array.isRequired,\n    institutes: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  Rating,\n  Chip,\n  Select,\n  MenuItem,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Clear } from '@mui/icons-material';\n\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  UPDATE_FACULTY, FACULTIES, INSTITUTES, RATINGS,\n} from '../../graphqlQueries';\n\nexport default function EditProfessor({ professor }) {\n  // Chip select requirements\n  const [courses, setCourses] = React.useState([]);\n  function handleDelete(course) {\n    setCourses(courses.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------------------\n  const [currentInstId, setCurrentInstId] = React.useState(Number(professor.institute));\n  const dispatch = useDispatch();\n  const institutesQuery = useQuery(INSTITUTES);\n  const ratingsQuery = useQuery(RATINGS, { variables: { faculty: Number(professor._id) } });\n  const [updateFaculty, { loading }] = useMutation(\n    UPDATE_FACULTY,\n    { refetchQueries: [{ query: FACULTIES }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    firstName: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    lastName: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    department: yup.string().required('Department is required').min(6, 'Enter at least 6 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: professor.firstName,\n      lastName: professor.lastName,\n      email: professor.email,\n      department: professor.department,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateFaculty(\n      {\n        variables: {\n          ...values,\n          courses,\n          institute: currentInstId,\n          id: Number(professor._id),\n        },\n      },\n    )\n      .then(() => dispatch(addToast({ message: 'Faculty updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  function calculateRatings(ratings) {\n    let total = 0;\n    ratings.forEach((r) => {\n      total += r.overAllRating;\n    });\n    return Number(total / ratings.length).toFixed(1);\n  }\n  React.useEffect(() => {\n    if (currentInstId === Number(professor.institute)) {\n      setCourses(professor.courses);\n      return;\n    }\n    // When institute is changed, the courses of previous one should be removed\n    setCourses(() => []);\n  }, [currentInstId]);\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col items-center justify-start w-full mb-3 md:flex-row\">\n        <Typography className=\"mr-2 text-4xl text-gray-400 md:ml-16\">{professor.firstName}</Typography>\n        <Rating\n          size=\"large\"\n          value={ratingsQuery.loading ? 0 : calculateRatings(ratingsQuery.data.ratings)}\n          classes={{ iconFilled: 'text-primary' }}\n        />\n        <Typography variant=\"h3\" className=\"mx-2 text-primary\">\n          (\n          {\n          ratingsQuery.loading ? 0 : calculateRatings(ratingsQuery.data.ratings)\n          }\n          )\n        </Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formik.values.lastName}\n          onChange={formik.handleChange}\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n          helperText={formik.touched.lastName && formik.errors.lastName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <Select\n          variant=\"standard\"\n          label=\"Institute\"\n          placeholder=\"Institute\"\n          className=\"w-full\"\n          disabled={institutesQuery.loading}\n          value={\n            !institutesQuery.loading\n              ? institutesQuery.data.institutes.find((i) => Number(i._id) === currentInstId)._id\n              : 0\n          }\n          onChange={(e) => setCurrentInstId(Number(e.target.value))}\n        >\n          {\n            !institutesQuery.loading\n            && institutesQuery.data.institutes.map((inst) => (\n              <MenuItem key={inst._id} value={inst._id}>{inst.name}</MenuItem>\n            ))\n          }\n        </Select>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Department\"\n          name=\"department\"\n          value={formik.values.department}\n          onChange={formik.handleChange}\n          error={formik.touched.department && Boolean(formik.errors.department)}\n          helperText={formik.touched.department && formik.errors.department}\n        />\n        <div className=\"flex flex-wrap w-full gap-3 p-3\">\n          <Typography className=\"w-full -ml-2 text-sm\">Courses</Typography>\n          {\n            !institutesQuery.loading\n            && courses.map(\n              (course) => (\n                <Chip\n                  key={course}\n                  label={course}\n                  deleteIcon={<Clear />}\n                  onDelete={() => handleDelete(course)}\n                />\n              ),\n            )\n          }\n          <Select\n            variant=\"standard\"\n            label=\"Courses\"\n            placeholder=\"Courses\"\n            className=\"w-full\"\n            disabled={institutesQuery.loading}\n            onChange={(e) => {\n              const found = courses.find((c) => c === e.target.value);\n              if (found) return;\n              setCourses([...courses, e.target.value]);\n            }}\n          >\n            {\n              !institutesQuery.loading\n              && institutesQuery.data.institutes.find(\n                (i) => Number(i._id) === currentInstId,\n              ).courses.map((course) => (\n                <MenuItem key={course} value={course}>{course}</MenuItem>\n              ))\n            }\n          </Select>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" disabled={loading || courses.length === 0} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Update'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n\nEditProfessor.propTypes = {\n  professor: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    institute: PropTypes.number.isRequired,\n    department: PropTypes.string.isRequired,\n    courses: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Button,\n  Card,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ChevronLeft, ChevronRight } from '@mui/icons-material';\n\nimport moment from 'moment';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  DELETE_FACULTY, FACULTIES, RATINGS, DELETE_RATING,\n} from '../../graphqlQueries';\n\nexport default function ViewProfessor({ professor }) {\n  const dispatch = useDispatch();\n  const [deleteFaculty, { loading }] = useMutation(\n    DELETE_FACULTY,\n    { refetchQueries: [{ query: FACULTIES }] },\n  );\n  const [deleteRating, ratingQuery] = useMutation(\n    DELETE_RATING,\n    { refetchQueries: [{ query: RATINGS }, { query: FACULTIES }] },\n  );\n  function handleDelete() {\n    deleteFaculty({ variables: { id: Number(professor._id) } })\n      .then(() => {\n        dispatch(addToast({ message: 'Deleted faculty successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'professors', data: null }));\n      })\n      .catch((error) => dispatch(addToast({ message: error.message, severity: 'error' })));\n  }\n  function handleRatingDelete(id) {\n    deleteRating({ variables: { id: Number(id) } })\n      .then(() => {\n        dispatch(addToast({ message: 'Deleted rating successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'professors', data: null }));\n      })\n      .catch((error) => dispatch(addToast({ message: error.message, severity: 'error' })));\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">{`${professor._id} - ${professor.firstName}`}</Typography>\n        <div className=\"flex-grow\" />\n        <Button variant=\"contained\" disabled={loading} onClick={() => handleDelete()} color=\"error\" className=\"h-full px-9 shadow-redGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Delete Professor'\n          }\n        </Button>\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'editProfessor', data: professor }))}>Edit Professor</Button>\n      </div>\n      <Card className=\"flex flex-col w-full gap-6 px-4 py-5 md:py-10 md:px-8\" elevation={6}>\n        {\n          professor.ratings.length === 0 && <Typography variant=\"h6\" color=\"primary\" align=\"center\">No ratings yet</Typography>\n        }\n        {\n          professor.ratings.map(\n            (rating) => (\n              <div className=\"flex flex-col w-full p-5 bg-gray-200 rounded-lg\">\n                <div className=\"flex justify-between gap-3\">\n                  <Typography className=\"text-lg font-semibold\">{rating.thoughts}</Typography>\n                  <Typography className=\"text-sm text-gray-500\">\n                    {\n                      professor.instituteName\n                    }\n                  </Typography>\n                </div>\n                <div className=\"flex mt-3 gap-9\">\n                  <Typography className=\"text-sm text-gray-500\">{rating.course}</Typography>\n                  <Typography className=\"text-sm font-medium text-gray-700\">{moment(rating.createdAt).format('MMMM DD, YYYY')}</Typography>\n                </div>\n                <div className=\"flex justify-between gap-3 mt-9\">\n                  <Typography className=\"text-sm font-medium text-gray-700\">\n                    {\n                      professor.firstName\n                    }\n                  </Typography>\n                  <Button variant=\"contained\" disabled={ratingQuery.loading} color=\"error\" className=\"px-9 shadow-redGlow\" onClick={() => handleRatingDelete(rating._id)}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            ),\n          )\n        }\n      </Card>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className=\"bg-gray-400 rounded-none shadow-lg\">\n          <ChevronLeft className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className=\"rounded-none shadow-lg bg-primary\">\n          <ChevronRight className=\"w-12 h-12\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nViewProfessor.propTypes = {\n  professor: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    courses: PropTypes.array.isRequired,\n    department: PropTypes.string.isRequired,\n    institute: PropTypes.number.isRequired,\n    instituteName: PropTypes.string.isRequired,\n    ratings: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Clear } from '@mui/icons-material';\n\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  NEW_FACULTY, INSTITUTES, COUNT_ALL, FACULTIES,\n} from '../../graphqlQueries';\n\nexport default function AddProfessor() {\n  // Chip select requirements\n  const [courses, setCourses] = React.useState([]);\n  function handleDelete(course) {\n    setCourses(courses.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------------------\n  const [currentInstId, setCurrentInstId] = React.useState(0);\n  const dispatch = useDispatch();\n  const institutesQuery = useQuery(INSTITUTES);\n  const [newFaculty, { loading }] = useMutation(\n    NEW_FACULTY, { refetchQueries: [{ query: FACULTIES }, { query: COUNT_ALL }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    firstName: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    lastName: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    department: yup.string().required('Department is required').min(6, 'Enter at least 6 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      department: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newFaculty(\n      { variables: { ...values, courses, institute: currentInstId } },\n    )\n      .then(() => dispatch(addToast({ message: 'Faculty added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  React.useEffect(() => {\n    // When institute is changed, the courses of previous one should be removed\n    setCourses(() => []);\n  }, [currentInstId]);\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Add Professor</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"First Name\"\n          name=\"firstName\"\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Last Name\"\n          name=\"lastName\"\n          value={formik.values.lastName}\n          onChange={formik.handleChange}\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n          helperText={formik.touched.lastName && formik.errors.lastName}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <Select\n          variant=\"standard\"\n          label=\"Institute\"\n          placeholder=\"Institute\"\n          className=\"w-full\"\n          disabled={institutesQuery.loading}\n          value={\n            !institutesQuery.loading\n              ? institutesQuery.data.institutes.find((i) => Number(i._id) === currentInstId)._id\n              : 0\n          }\n          onChange={(e) => setCurrentInstId(Number(e.target.value))}\n        >\n          {\n            !institutesQuery.loading\n            && institutesQuery.data.institutes.map((inst) => (\n              <MenuItem key={inst._id} value={inst._id}>{inst.name}</MenuItem>\n            ))\n          }\n        </Select>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Department\"\n          name=\"department\"\n          value={formik.values.department}\n          onChange={formik.handleChange}\n          error={formik.touched.department && Boolean(formik.errors.department)}\n          helperText={formik.touched.department && formik.errors.department}\n        />\n        <div className=\"flex flex-wrap w-full gap-3 p-3\">\n          <Typography className=\"w-full -ml-2 text-sm\">Courses</Typography>\n          {\n            !institutesQuery.loading\n            && courses.map(\n              (course) => (\n                <Chip\n                  key={course}\n                  label={course}\n                  deleteIcon={<Clear />}\n                  onDelete={() => handleDelete(course)}\n                />\n              ),\n            )\n          }\n          <Select\n            variant=\"standard\"\n            label=\"Courses\"\n            placeholder=\"Courses\"\n            className=\"w-full\"\n            disabled={institutesQuery.loading}\n            onChange={(e) => {\n              const found = courses.find((c) => c === e.target.value);\n              if (found) return;\n              setCourses([...courses, e.target.value]);\n            }}\n          >\n            {\n              !institutesQuery.loading\n              && institutesQuery.data.institutes.find(\n                (i) => Number(i._id) === currentInstId,\n              ).courses.map((course) => (\n                <MenuItem key={course} value={course}>{course}</MenuItem>\n              ))\n            }\n          </Select>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" disabled={loading || courses.length === 0} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Add'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\nimport { login, logout } from '../../redux/accountActions';\n\nimport { ADMINS, UPDATE_ADMIN } from '../../graphqlQueries';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nexport default function EditAdmin({ admin }) {\n  const dispatch = useDispatch();\n  const currentAdmin = useSelector((state) => state.account.admin);\n  const [updateAdmin, { loading }] = useMutation(\n    UPDATE_ADMIN,\n    { refetchQueries: [{ query: ADMINS }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    name: yup.string().required('Name is required').min(2, 'Enter at least 2 characters'),\n    email: yup.string().email('Enter a valid email').required('Email is required'),\n    password: yup.string().min(8, 'Password should be at least 8 characters long').required('Password is required'),\n    newPassword: yup.string().min(8, 'Password should be at least 8 characters long'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: admin.name,\n      email: admin.email,\n      password: '',\n      newPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateAdmin(\n      { variables: { ...values, id: Number(admin._id), status: admin.status } },\n    )\n      .then((r) => {\n        if (Number(currentAdmin._id) === Number(r.data.updateAdmin._id)) {\n          if (currentAdmin.email !== r.data.updateAdmin.email) {\n            dispatch(addToast({ message: 'Email changed, please login again', severity: 'warning' }));\n            dispatch(logout());\n          } else {\n            dispatch(addToast({ message: 'Admin updated successfully', severity: 'success' }));\n            dispatch(login({ admin: r.data.updateAdmin, role: 'admin' }));\n          }\n        }\n        dispatch(addToast({ message: 'Admin updated successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'admins', data: null }));\n      })\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Grid container rowSpacing={5} columnSpacing={15}>\n        <Grid item xs={12}>\n          <Typography className=\"text-4xl font-medium text-gray-500 pb-9\">Update Admin Details</Typography>\n          <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              required\n              label=\"Name\"\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              required\n              label=\"Email\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n            <TextField\n              variant=\"standard\"\n              type=\"password\"\n              fullWidth\n              required\n              label=\"Password\"\n              name=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n            <TextField\n              variant=\"standard\"\n              type=\"password\"\n              fullWidth\n              label=\"New Password\"\n              name=\"newPassword\"\n              value={formik.values.newPassword}\n              onChange={formik.handleChange}\n              error={formik.touched.newPassword && Boolean(formik.errors.newPassword)}\n              helperText={formik.touched.newPassword && formik.errors.newPassword}\n            />\n            <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n              {\n                loading\n                  ? <CircularProgress />\n                  : 'Update'\n              }\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nEditAdmin.propTypes = {\n  admin: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { NEW_AD } from '../../graphqlQueries';\n\nexport default function AddAdDialog({ open, handleClose }) {\n  const dispatch = useDispatch();\n  const [newAd, { loading }] = useMutation(\n    NEW_AD,\n  );\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    locationId: yup.string().required('Location ID is required').min(2, 'Enter at least 2 characters'),\n    code: yup.string().required('Code is required').min(2, 'Enter at least 2 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      locationId: '',\n      code: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newAd({ variables: values })\n      .then(() => dispatch(addToast({ message: 'Ad added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  return (\n    <Dialog open={open} components=\"div\" onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <form className=\"flex flex-col w-full\" onSubmit={formik.handleSubmit}>\n        <DialogTitle className=\"text-3xl font-medium text-gray-500\">Ad Details</DialogTitle>\n        <DialogContent className=\"flex flex-col items-start gap-9\">\n          <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n            <TextField\n              variant=\"standard\"\n              label=\"Ad Title\"\n              className=\"md:w-3/6\"\n              required\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <Select\n              variant=\"standard\"\n              label=\"Location ID\"\n              placeholder=\"Location ID\"\n              className=\"md:w-3/6\"\n              name=\"locationId\"\n              value={formik.values.locationId}\n              onChange={formik.handleChange}\n              error={formik.touched.locationId && Boolean(formik.errors.locationId)}\n            >\n              <MenuItem value=\"\" disabled>Select Location</MenuItem>\n              <MenuItem value=\"/blog\">Blog Page</MenuItem>\n              <MenuItem value=\"/post\">Post Page</MenuItem>\n            </Select>\n          </span>\n          <TextField\n            fullWidth\n            variant=\"standard\"\n            label=\"Ad Code\"\n            required\n            name=\"code\"\n            value={formik.values.code}\n            onChange={formik.handleChange}\n            error={formik.touched.code && Boolean(formik.errors.code)}\n            helperText={formik.touched.code && formik.errors.code}\n          />\n        </DialogContent>\n        <DialogActions className=\"flex justify-between w-full gap-9\">\n          <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\">\n            {\n              loading\n                ? <CircularProgress />\n                : 'Add'\n            }\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nAddAdDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function EditAdDialog({\n  open,\n  handleClose,\n  ad,\n  handleUpdate,\n}) {\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    locationId: yup.string().required('Location ID is required').min(2, 'Enter at least 2 characters'),\n    code: yup.string().required('Code is required').min(2, 'Enter at least 2 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: ad.title,\n      locationId: ad.locationId,\n      code: ad.code,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      handleClose();\n      handleUpdate({ ...values, id: Number(ad._id), status: ad.status });\n    },\n  });\n  return (\n    <Dialog open={open} components=\"div\" onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <form className=\"flex flex-col w-full\" onSubmit={formik.handleSubmit}>\n        <DialogTitle className=\"text-3xl font-medium text-gray-500\">Edit Ad</DialogTitle>\n        <DialogContent className=\"flex flex-col items-start gap-9\">\n          <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n            <TextField\n              variant=\"standard\"\n              label=\"Ad Title\"\n              className=\"md:w-3/6\"\n              required\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <Select\n              variant=\"standard\"\n              label=\"Location ID\"\n              placeholder=\"Location ID\"\n              className=\"md:w-3/6\"\n              name=\"locationId\"\n              value={formik.values.locationId}\n              onChange={formik.handleChange}\n              error={formik.touched.locationId && Boolean(formik.errors.locationId)}\n            >\n              <MenuItem value=\"\" disabled>Select Location</MenuItem>\n              <MenuItem value=\"/blog\">Blog Page</MenuItem>\n              <MenuItem value=\"/post\">Post Page</MenuItem>\n            </Select>\n          </span>\n          <TextField\n            fullWidth\n            variant=\"standard\"\n            label=\"Ad Code\"\n            required\n            name=\"code\"\n            value={formik.values.code}\n            onChange={formik.handleChange}\n            error={formik.touched.code && Boolean(formik.errors.code)}\n            helperText={formik.touched.code && formik.errors.code}\n          />\n        </DialogContent>\n        <DialogActions className=\"flex justify-between w-full gap-9\">\n          <Button type=\"submit\" variant=\"contained\" style={{ maxHeight: '38px' }} className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\">Update</Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nEditAdDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleUpdate: PropTypes.func.isRequired,\n  ad: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    locationId: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  DeleteForever,\n  Visibility,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\n// import { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport AddAdDialog from './AddAdDialog';\nimport EditAdDialog from './EditAdDialog';\n\nimport {\n  ADS,\n  UPDATE_AD,\n  DELETE_AD,\n} from '../../graphqlQueries';\n\nexport default function Ads() {\n  const [offset, setOffset] = React.useState(0);\n  const [openNewAdDialog, setOpenNewAdDialog] = useState(false);\n  const [updateAd, setUpdateAd] = useState({});\n  const [openUpdateAdDialog, setOpenUpdateAdDialog] = useState(false);\n  function doUpdateAd(ad) {\n    setUpdateAd(() => ad);\n    setOpenUpdateAdDialog(true);\n  }\n  const dispatch = useDispatch();\n  const { loading, data } = useQuery(ADS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const [update] = useMutation(UPDATE_AD, { refetchQueries: [{ query: ADS }] });\n  const [deleteAd] = useMutation(DELETE_AD, { refetchQueries: [{ query: ADS }] });\n  const [searchValue, setSearchValue] = React.useState('');\n  function handleUpdate(updatedAd) {\n    update({ variables: updatedAd })\n      .then(() => dispatch(addToast({ message: 'Ad updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function handleStatusChange(value, ad) {\n    const variables = {\n      ...ad,\n      id: Number(ad._id),\n      status: value,\n    };\n    handleUpdate(variables);\n  }\n  function handleDelete(_id) {\n    deleteAd({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Ad deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allAds) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <AddAdDialog open={openNewAdDialog} handleClose={() => setOpenNewAdDialog(false)} />\n      {\n        openUpdateAdDialog\n        && (\n          <EditAdDialog\n            open={openUpdateAdDialog}\n            handleClose={() => setOpenUpdateAdDialog(false)}\n            handleUpdate={(updatedAd) => handleUpdate(updatedAd)}\n            ad={{ ...updateAd, _id: Number(updateAd._id) }}\n          />\n        )\n      }\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Ads</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => setOpenNewAdDialog(true)}>Add New Ad</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold text-gray-400\">ID</TableCell>\n              <TableCell className=\"text-lg font-semibold text-gray-400\">Ad Title</TableCell>\n              <TableCell className=\"font-semibold text-gray-400\">Status</TableCell>\n              <TableCell className=\"font-semibold text-center text-gray-400\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && data && (\n              <TableBody>\n                {\n                  data?.ads.filter(\n                    (a) => a.title.toLowerCase().includes(searchValue),\n                  ).map((ad) => (\n                    <TableRow key={ad._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"text-gray-400\">{ad._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{ad.title}</TableCell>\n                      <TableCell className=\"text-gray-600\">\n                        <select value={ad.status} onChange={(event) => handleStatusChange(event.target.value, ad)} className=\"w-24 min-w-full p-2 bg-gray-200\">\n                          <option value=\"Active\">Active</option>\n                          <option value=\"Inactive\">Inactive</option>\n                        </select>\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton onClick={() => doUpdateAd(ad)}>\n                          <Visibility />\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(ad._id)}>\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allAds ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable consistent-return */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  ALLOWED_EMAILS,\n  NEW_ALLOWED_EMAIL,\n} from '../../graphqlQueries';\n\nexport default function AddAdDialog({ open, handleClose }) {\n  const dispatch = useDispatch();\n  const [newEmail, setNewEmail] = React.useState({\n    emailDomain: '',\n    isAllowed: true,\n  });\n  const [newAllowedEmail, { loading }] = useMutation(\n    NEW_ALLOWED_EMAIL,\n    { refetchQueries: [{ query: ALLOWED_EMAILS }] },\n  );\n  function handleSubmit() {\n    if (newEmail.emailDomain !== '') {\n      newAllowedEmail({ variables: newEmail })\n        .then(() => dispatch(addToast({ message: 'Email added successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n    } else return dispatch(addToast({ message: 'Email Domain is required', severity: 'error' }));\n    handleClose();\n  }\n  return (\n    <Dialog open={open} components=\"div\" onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <DialogTitle className=\"text-3xl font-medium text-gray-500\">Add Email</DialogTitle>\n      <DialogContent className=\"flex flex-col items-start gap-9\">\n        <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n          <TextField\n            variant=\"standard\"\n            label=\"Email Domain\"\n            value={newEmail.emailDomain}\n            onChange={(e) => setNewEmail({ ...newEmail, emailDomain: e.target.value })}\n            required\n            className=\"md:w-3/6\"\n          />\n          <Select\n            variant=\"standard\"\n            label=\"Is Allowed\"\n            className=\"md:w-2/6\"\n            value={newEmail.isAllowed ? 'Allowed' : 'Not Allowed'}\n            onChange={(e) => setNewEmail({ ...newEmail, isAllowed: e.target.value === 'Allowed' })}\n            required\n          >\n            <MenuItem value=\"Allowed\">Allowed</MenuItem>\n            <MenuItem value=\"Not Allowed\">Not Allowed</MenuItem>\n          </Select>\n        </span>\n      </DialogContent>\n      <DialogActions className=\"flex justify-between w-full gap-9\">\n        <Button variant=\"contained\" disabled={loading} onClick={() => handleSubmit()} style={{ maxHeight: '38px' }} className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Add'\n          }\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nAddAdDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nexport default function AddEmailDialog({\n  open,\n  handleClose,\n  handleUpdate,\n  email,\n}) {\n  const dispatch = useDispatch();\n  const [newEmail, setNewEmail] = React.useState({\n    emailDomain: email.emailDomain,\n    isAllowed: email.isAllowed,\n  });\n  function handleSubmit() {\n    if (newEmail.emailDomain !== '') {\n      handleUpdate({ ...newEmail, id: Number(email._id), status: email.status });\n      handleClose();\n    } else dispatch(addToast({ message: 'Email Domain is required', severity: 'error' }));\n  }\n  return (\n    <Dialog open={open} components=\"div\" onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <DialogTitle className=\"text-3xl font-medium text-gray-500\">Edit Email</DialogTitle>\n      <DialogContent className=\"flex flex-col items-start gap-9\">\n        <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n          <TextField\n            variant=\"standard\"\n            label=\"Email Domain\"\n            value={newEmail.emailDomain}\n            onChange={(e) => setNewEmail({ ...newEmail, emailDomain: e.target.value })}\n            required\n            className=\"md:w-3/6\"\n          />\n          <Select\n            variant=\"standard\"\n            label=\"Is Allowed\"\n            className=\"md:w-2/6\"\n            value={newEmail.isAllowed ? 'Allowed' : 'Not Allowed'}\n            onChange={(e) => setNewEmail({ ...newEmail, isAllowed: e.target.value === 'Allowed' })}\n            required\n          >\n            <MenuItem value=\"Allowed\">Allowed</MenuItem>\n            <MenuItem value=\"Not Allowed\">Not Allowed</MenuItem>\n          </Select>\n        </span>\n      </DialogContent>\n      <DialogActions className=\"flex justify-between w-full gap-9\">\n        <Button\n          variant=\"contained\"\n          style={{ maxHeight: '38px' }}\n          className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\"\n          onClick={() => handleSubmit()}\n        >\n          Update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nAddEmailDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleUpdate: PropTypes.func.isRequired,\n  email: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    emailDomain: PropTypes.string.isRequired,\n    isAllowed: PropTypes.bool.isRequired,\n    status: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  DeleteForever,\n  Visibility,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  ALLOWED_EMAILS, DELETE_EMAIL, UPDATE_ALLOWED_EMAIL,\n} from '../../graphqlQueries';\n\nimport AddEmailDialog from './AddEmailDialog';\nimport EditEmailDialog from './EditEmailDialog';\n\nexport default function AllowedEmails() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [openNewEmailDialog, setOpenNewEmailDialog] = useState(false);\n  const [updateEmail, setUpdateEmail] = useState({});\n  const [openUpdateEmailDialog, setOpenUpdateEmailDialog] = useState(false);\n  function doUpdateEmail(email) {\n    setUpdateEmail(() => email);\n    setOpenUpdateEmailDialog(true);\n  }\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(ALLOWED_EMAILS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const [update] = useMutation(\n    UPDATE_ALLOWED_EMAIL,\n    { refetchQueries: [{ query: ALLOWED_EMAILS }] },\n  );\n  const [deleteEmail] = useMutation(DELETE_EMAIL, { refetchQueries: [{ query: ALLOWED_EMAILS }] });\n  function handleUpdate(updatedEmail) {\n    update({ variables: updatedEmail })\n      .then(() => dispatch(addToast({ message: 'Ad updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function handleStatusChange(value, email) {\n    const variables = {\n      ...email,\n      id: Number(email._id),\n      status: value,\n    };\n    handleUpdate(variables);\n  }\n  function handleDelete(_id) {\n    deleteEmail({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Email domain deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allAllowedEmails) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <AddEmailDialog open={openNewEmailDialog} handleClose={() => setOpenNewEmailDialog(false)} />\n      {\n        openUpdateEmailDialog\n        && (\n          <EditEmailDialog\n            open={openUpdateEmailDialog}\n            handleClose={() => setOpenUpdateEmailDialog(false)}\n            handleUpdate={(updatedEmail) => handleUpdate(updatedEmail)}\n            email={{ ...updateEmail, _id: Number(updateEmail._id) }}\n          />\n        )\n      }\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"text-3xl text-gray-400 md:ml-16\">Allowed Emails</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => setOpenNewEmailDialog(true)}>Add New Email</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold text-gray-400\">ID</TableCell>\n              <TableCell className=\"text-lg font-semibold text-gray-400\">Email domain</TableCell>\n              <TableCell className=\"font-semibold text-gray-400\">Status</TableCell>\n              <TableCell className=\"font-semibold text-center text-gray-400\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && data && (\n              <TableBody>\n                {\n                  data?.allowedEmails.filter(\n                    (email) => email.emailDomain.toLowerCase().includes(searchValue),\n                  ).map((email) => (\n                    <TableRow key={email._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"text-gray-400\">{email._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{email.emailDomain}</TableCell>\n                      <TableCell className=\"text-gray-600\">\n                        <select value={email.status} className=\"w-24 min-w-full p-2 bg-gray-200\" onChange={(event) => handleStatusChange(event.target.value, email)}>\n                          <option value=\"Active\">Active</option>\n                          <option value=\"Inactive\">Inactive</option>\n                        </select>\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton onClick={() => doUpdateEmail(email)}>\n                          <Visibility />\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(email._id)}>\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allAllowedEmails ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { NEW_FAQ, FAQS } from '../../graphqlQueries';\n\nexport default function AddFaqDialog({ open, handleClose }) {\n  const dispatch = useDispatch();\n  const [newFaq, { loading }] = useMutation(NEW_FAQ, { refetchQueries: [{ query: FAQS }] });\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    answer: yup.string().required('Answer is required').min(2, 'Enter at least 2 characters'),\n    category: yup.mixed().oneOf(['Student', 'Teacher', 'General', 'Legals'], 'Please select one of Student or Teacher').required('Category is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      answer: '',\n      category: 'Student',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      newFaq({ variables: values })\n        .then(() => dispatch(addToast({ message: 'Faq added successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n      handleClose();\n    },\n  });\n  return (\n    <Dialog open={open} onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <form className=\"flex flex-col w-full\" onSubmit={formik.handleSubmit}>\n        <DialogTitle className=\"text-3xl font-medium text-gray-500\">Add Faq</DialogTitle>\n        <DialogContent className=\"flex flex-col items-start gap-9\">\n          <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n            <TextField\n              variant=\"standard\"\n              className=\"md:w-3/6\"\n              required\n              label=\"Title\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <Select\n              variant=\"standard\"\n              className=\"md:w-2/6\"\n              required\n              label=\"Name\"\n              name=\"category\"\n              value={formik.values.category}\n              onChange={formik.handleChange}\n              error={formik.touched.category && Boolean(formik.errors.category)}\n              helperText={formik.touched.category && formik.errors.category}\n            >\n              <MenuItem value=\"Student\">Student</MenuItem>\n              <MenuItem value=\"Teacher\">Teacher</MenuItem>\n              <MenuItem value=\"General\">General</MenuItem>\n              <MenuItem value=\"Legals\">Legals</MenuItem>\n            </Select>\n          </span>\n          <TextField\n            variant=\"standard\"\n            fullWidth\n            required\n            label=\"Answer of Faq\"\n            name=\"answer\"\n            value={formik.values.answer}\n            onChange={formik.handleChange}\n            error={formik.touched.answer && Boolean(formik.errors.answer)}\n            helperText={formik.touched.answer && formik.errors.answer}\n          />\n        </DialogContent>\n        <DialogActions className=\"flex justify-between w-full gap-9\">\n          <Button type=\"submit\" disabled={loading} variant=\"contained\" style={{ maxHeight: '38px' }} className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\">\n            {\n              loading\n                ? <CircularProgress />\n                : 'Add'\n            }\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nAddFaqDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Select,\n  MenuItem,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { UPDATE_FAQ, FAQS } from '../../graphqlQueries';\n\nexport default function AddFaqDialog({ open, handleClose, faq }) {\n  const dispatch = useDispatch();\n  const [updateFaq, { loading }] = useMutation(UPDATE_FAQ, { refetchQueries: [{ query: FAQS }] });\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    answer: yup.string().required('Answer is required').min(2, 'Enter at least 2 characters'),\n    category: yup.mixed().oneOf(['Student', 'Teacher'], 'Please select one of Student or Teacher').required('Category is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: faq.title,\n      answer: faq.answer,\n      category: faq.category,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      updateFaq({ variables: { ...values, id: Number(faq._id) } })\n        .then(() => dispatch(addToast({ message: 'Faq updated successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n      handleClose();\n    },\n  });\n  return (\n    <Dialog open={open} onClose={handleClose} classes={{ paper: 'flex-grow max-w-full md:mx-16 px-4 md:px-8 py-14' }}>\n      <form className=\"flex flex-col w-full\" onSubmit={formik.handleSubmit}>\n        <DialogTitle className=\"text-3xl font-medium text-gray-500\">Edit Faq</DialogTitle>\n        <DialogContent className=\"flex flex-col items-start gap-9\">\n          <span className=\"flex flex-col justify-between w-full gap-9 md:flex-row\">\n            <TextField\n              variant=\"standard\"\n              className=\"md:w-3/6\"\n              required\n              label=\"Title\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <Select\n              variant=\"standard\"\n              className=\"md:w-2/6\"\n              required\n              label=\"Name\"\n              name=\"category\"\n              value={formik.values.category}\n              onChange={formik.handleChange}\n              error={formik.touched.category && Boolean(formik.errors.category)}\n              helperText={formik.touched.category && formik.errors.category}\n            >\n              <MenuItem value=\"Student\">Student</MenuItem>\n              <MenuItem value=\"Teacher\">Teacher</MenuItem>\n            </Select>\n          </span>\n          <TextField\n            variant=\"standard\"\n            fullWidth\n            required\n            label=\"Answer of Faq\"\n            name=\"answer\"\n            value={formik.values.answer}\n            onChange={formik.handleChange}\n            error={formik.touched.answer && Boolean(formik.errors.answer)}\n            helperText={formik.touched.answer && formik.errors.answer}\n          />\n        </DialogContent>\n        <DialogActions className=\"flex justify-between w-full gap-9\">\n          <Button type=\"submit\" disabled={loading} variant=\"contained\" style={{ maxHeight: '38px' }} className=\"md:w-1/3 lg:w-1/6 shadow-primaryGlow\">\n            {\n              loading\n                ? <CircularProgress />\n                : 'Update'\n            }\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nAddFaqDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  faq: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  DeleteForever,\n  Visibility,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  FAQS,\n  DELETE_FAQ,\n} from '../../graphqlQueries';\n\nimport AddFaqDialog from './AddFaqDialog';\nimport EditFaqDialog from './EditFaqDialog';\n\nexport default function Faqs() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [openNewFaqDialog, setOpenNewFaqDialog] = useState(false);\n  const [updateFaq, setUpdateFaq] = useState({});\n  const [openUpdateFaqDialog, setOpenUpdateFaqDialog] = useState(false);\n  function doUpdateFaq(faq) {\n    setUpdateFaq(faq);\n    setOpenUpdateFaqDialog(true);\n  }\n  const { loading, data } = useQuery(FAQS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const [deleteFaq] = useMutation(DELETE_FAQ, { refetchQueries: [{ query: FAQS }] });\n  const [searchValue, setSearchValue] = React.useState('');\n  function handleDelete(_id) {\n    deleteFaq({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Faq deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allFaqs) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <AddFaqDialog open={openNewFaqDialog} handleClose={() => setOpenNewFaqDialog(false)} />\n      {\n        openUpdateFaqDialog && (\n          <EditFaqDialog\n            open={openUpdateFaqDialog}\n            handleClose={() => setOpenUpdateFaqDialog(false)}\n            faq={updateFaq}\n          />\n        )\n      }\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Faq&apos;s List</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => setOpenNewFaqDialog(true)}>Add New Faq</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold text-gray-400\">ID</TableCell>\n              <TableCell className=\"text-lg font-semibold text-gray-400\">Faq Title</TableCell>\n              <TableCell className=\"font-semibold text-gray-400\">Category</TableCell>\n              <TableCell className=\"font-semibold text-center text-gray-400\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && data && (\n              <TableBody>\n                {\n                  data?.faqs.filter(\n                    (faq) => faq.title.toLowerCase().includes(searchValue),\n                  ).map((faq) => (\n                    <TableRow key={faq._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"text-gray-400\">{faq._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{faq.title}</TableCell>\n                      <TableCell className=\"text-gray-400\">{faq.category}</TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton onClick={() => doUpdateFaq(faq)}>\n                          <Visibility />\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(faq._id)}>\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allFaqs ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport JoditEditor from 'jodit-react';\n\nimport {\n  Card,\n  Grid,\n  Button,\n  Typography,\n  TextField,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Clear, Add } from '@mui/icons-material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { BLOGS, UPDATE_BLOG } from '../../graphqlQueries';\n\nexport default function EditBlog({ blog }) {\n  // Chip select requirements\n  const [tags, setTags] = React.useState(blog.tags);\n  const [currentText, setCurrentText] = React.useState('');\n  function handleDelete(course) {\n    setTags(tags.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------\n  // Editor requirements\n  const config = {\n    readonly: false,\n  };\n  // console.log(editor?.current.component.OPTIONS);\n  // ----------------------------------------\n  const dispatch = useDispatch();\n  const [updateBlog, { loading }] = useMutation(\n    UPDATE_BLOG,\n    { refetchQueries: [{ query: BLOGS }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    content: yup.string().required('Content is required').min(50, 'Enter at least 50 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: blog.title,\n      content: blog.content,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateBlog({ variables: { ...values, tags, id: Number(blog._id) } })\n      .then(() => dispatch(addToast({ message: 'Blog updated successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  // -------------------------\n\n  return (\n    <div className=\"flex flex-col w-full h-auto\">\n      <Grid container justifyContent=\"center\" rowSpacing={5} columnSpacing={15}>\n        <Grid item xs={12} md={11}>\n          <Typography className=\"text-3xl text-gray-400 pb-9\">Update Post</Typography>\n          <Card className=\"flex flex-col w-full gap-3 p-14\" component=\"form\" onSubmit={formik.handleSubmit} elevation={6}>\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              label=\"Title\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <div className={`w-full block ${formik.errors.content && 'border border-red-600'}`}>\n              <JoditEditor\n                value={formik.values.content}\n                config={config}\n                onBlur={(newContent) => formik.setFieldValue('content', newContent)}\n              />\n              {formik.errors.content && <p className=\"text-xs text-red-500\">{formik.errors.content}</p>}\n            </div>\n            <div className=\"flex flex-wrap w-full gap-3 p-3\">\n              <Typography className=\"w-full -ml-2 text-sm\">Tags</Typography>\n              {\n                tags.map(\n                  (course) => (\n                    <Chip\n                      key={course}\n                      label={course}\n                      deleteIcon={<Clear />}\n                      onDelete={() => handleDelete(course)}\n                    />\n                  ),\n                )\n              }\n              <TextField\n                fullWidth\n                variant=\"standard\"\n                value={currentText}\n                onChange={(e) => setCurrentText(e.target.value.toUpperCase())}\n                InputProps={{\n                  endAdornment: (\n                    <Button\n                      variant=\"outlined\"\n                      className=\"mb-0.5\"\n                      onClick={() => {\n                        if (currentText === '') return;\n                        setTags([...tags, currentText.trim()]);\n                        setCurrentText('');\n                      }}\n                    >\n                      <Add />\n                    </Button>\n                  ),\n                }}\n              />\n            </div>\n            <Button type=\"submit\" disabled={loading} variant=\"contained\" style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n              {\n                loading\n                  ? <CircularProgress />\n                  : 'Update'\n              }\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nEditBlog.propTypes = {\n  blog: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    tags: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport JoditEditor from 'jodit-react';\n\nimport {\n  Card,\n  Grid,\n  Button,\n  Typography,\n  TextField,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Clear, Add } from '@mui/icons-material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { BLOGS, NEW_BLOG } from '../../graphqlQueries';\n\nexport default function AddBlog() {\n  const admin = useSelector((state) => state.account.admin);\n  // Chip select requirements\n  const [tags, setTags] = React.useState([]);\n  const [currentText, setCurrentText] = React.useState('');\n  function handleDelete(course) {\n    setTags(tags.filter((c) => c !== course.toUpperCase()));\n  }\n  // --------------------------\n  // Editor requirements\n  const config = {\n    readonly: false,\n  };\n  // console.log(editor?.current.component.OPTIONS);\n  // ----------------------------------------\n  const dispatch = useDispatch();\n  const [newBlog, { loading }] = useMutation(\n    NEW_BLOG,\n    { refetchQueries: [{ query: BLOGS }] },\n  );\n  // Form requirements\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(2, 'Enter at least 2 characters'),\n    content: yup.string().required('Content is required').min(50, 'Enter at least 50 characters'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      content: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => newBlog({ variables: { ...values, tags, writtenBy: Number(admin._id) } })\n      .then(() => dispatch(addToast({ message: 'Blog added successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' }))),\n  });\n  // -------------------------\n\n  return (\n    <div className=\"flex flex-col w-full h-auto\">\n      <Grid container justifyContent=\"center\" rowSpacing={5} columnSpacing={15}>\n        <Grid item xs={12} md={11}>\n          <Typography className=\"text-3xl text-gray-400 pb-9\">Add Post</Typography>\n          <Card className=\"flex flex-col w-full gap-3 p-14\" component=\"form\" onSubmit={formik.handleSubmit} elevation={6}>\n            <TextField\n              variant=\"standard\"\n              fullWidth\n              label=\"Title\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n            <div className={`w-full block ${formik.errors.content && 'border border-red-600'}`}>\n              <JoditEditor\n                value={formik.values.content}\n                config={config}\n                onBlur={(newContent) => formik.setFieldValue('content', newContent)}\n              />\n              {formik.errors.content && <p className=\"text-xs text-red-500\">{formik.errors.content}</p>}\n            </div>\n            <div className=\"flex flex-wrap w-full gap-3 p-3\">\n              <Typography className=\"w-full -ml-2 text-sm\">Tags</Typography>\n              {\n                tags.map(\n                  (course) => (\n                    <Chip\n                      key={course}\n                      label={course}\n                      deleteIcon={<Clear />}\n                      onDelete={() => handleDelete(course)}\n                    />\n                  ),\n                )\n              }\n              <TextField\n                fullWidth\n                variant=\"standard\"\n                value={currentText}\n                onChange={(e) => setCurrentText(e.target.value.toUpperCase())}\n                InputProps={{\n                  endAdornment: (\n                    <Button\n                      variant=\"outlined\"\n                      className=\"mb-0.5\"\n                      onClick={() => {\n                        if (currentText === '') return;\n                        setTags([...tags, currentText.trim()]);\n                        setCurrentText('');\n                      }}\n                    >\n                      <Add />\n                    </Button>\n                  ),\n                }}\n              />\n            </div>\n            <Button type=\"submit\" disabled={loading} variant=\"contained\" style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n              {\n                loading\n                  ? <CircularProgress />\n                  : 'Add'\n              }\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  TextField,\n  Button,\n  Card,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { ABOUT_US, UPDATE_ABOUT_US } from '../../graphqlQueries';\n\nexport default function AboutUs({ ourStory, whoWeAre }) {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ ourStory, whoWeAre });\n  const [updateAboutUs, { loading }] = useMutation(\n    UPDATE_ABOUT_US,\n    { refetchQueries: [{ query: ABOUT_US }] },\n  );\n  function handleUpdate() {\n    updateAboutUs({ variables: state })\n      .then(() => dispatch(addToast({ message: 'Updated About Us successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  return (\n    <Card elevation={1} className=\"flex flex-col gap-12 px-3 pb-14 md:px-14\">\n      <TextField\n        variant=\"standard\"\n        multiline\n        label=\"Our Story\"\n        className=\"w-full\"\n        value={state.ourStory}\n        onChange={(e) => setState({ ...state, ourStory: e.target.value })}\n      />\n      <TextField\n        variant=\"standard\"\n        multiline\n        label=\"Who we are?\"\n        className=\"w-full\"\n        value={state.whoWeAre}\n        onChange={(e) => setState({ ...state, whoWeAre: e.target.value })}\n      />\n      <Button variant=\"contained\" disabled={loading} onClick={() => handleUpdate()}>\n        {\n          loading\n            ? <CircularProgress />\n            : 'Update'\n        }\n      </Button>\n    </Card>\n  );\n}\n\nAboutUs.defaultProps = {\n  ourStory: '',\n  whoWeAre: '',\n};\n\nAboutUs.propTypes = {\n  ourStory: PropTypes.string,\n  whoWeAre: PropTypes.string,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  Grid,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  DeleteForever,\n  Visibility,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  ADMINS,\n  UPDATE_ADMIN,\n  DELETE_ADMIN,\n  ABOUT_US,\n} from '../../graphqlQueries';\nimport AboutUs from './AboutUs';\n\nexport default function Admins() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const currentAdmin = useSelector((state) => state.account.admin);\n  const { loading, data } = useQuery(ADMINS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const aboutUsQuery = useQuery(ABOUT_US);\n  const [updateAdmin] = useMutation(UPDATE_ADMIN, { refetchQueries: [{ query: ADMINS }] });\n  const [deleteAdmin] = useMutation(DELETE_ADMIN, { refetchQueries: [{ query: ADMINS }] });\n  const [searchValue, setSearchValue] = React.useState('');\n  function handleStatusChange(value, admin) {\n    if (Number(currentAdmin._id) === Number(admin._id)) {\n      dispatch(addToast({ message: 'Sorry, you can not change your status', severity: 'error' }));\n    } else {\n      const variables = {\n        ...admin,\n        id: Number(admin._id),\n        status: value,\n      };\n      updateAdmin({ variables })\n        .then(() => dispatch(addToast({ message: 'Admin status updated successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n    }\n  }\n  function handleDelete(_id) {\n    deleteAdmin({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Admin deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allAdmins) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <Grid container rowSpacing={8} columnSpacing={8}>\n      <Grid item xs={12} md={6}>\n        <div className=\"flex flex-col w-full gap-9\">\n          <div className=\"flex flex-col w-full gap-2 md:gap-6 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n            <Typography className=\"ml-16 text-3xl text-gray-400\">Admins</Typography>\n            <div className=\"flex-grow\" />\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              placeholder=\"Search...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <img src={Search} alt=\"search icon\" className=\"h-9\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <Button variant=\"contained\" className=\"w-full h-full px-1 md:w-48 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addAdmin', data: null }))}>Add Admins</Button>\n          </div>\n          <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell className=\"font-semibold text-gray-400\">ID</TableCell>\n                  <TableCell className=\"text-lg font-semibold text-gray-400\">Admin Email</TableCell>\n                  <TableCell className=\"font-semibold text-gray-400\">Status</TableCell>\n                  <TableCell className=\"font-semibold text-center text-gray-400\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              {\n                !loading && data && (\n                  <TableBody>\n                    {\n                      data?.admins.filter(\n                        (adm) => adm.name.toLowerCase().includes(searchValue),\n                      ).map((admin) => (\n                        <TableRow key={admin._id} className=\"hover:shadow-md\">\n                          <TableCell className=\"text-gray-400\">{admin._id}</TableCell>\n                          <TableCell className=\"text-lg font-semibold text-black\">{admin.email}</TableCell>\n                          <TableCell className=\"text-gray-600\">\n                            <select value={admin.status} onChange={(event) => handleStatusChange(event.target.value, admin)} className=\"w-24 min-w-full p-2 bg-gray-200\">\n                              <option value=\"Active\">Active</option>\n                              <option value=\"Inactive\">Inactive</option>\n                            </select>\n                          </TableCell>\n                          <TableCell className=\"text-center\">\n                            <IconButton onClick={() => dispatch(setCurrentTab({ name: 'editAdmin', data: admin }))}>\n                              <Visibility />\n                            </IconButton>\n                            <IconButton onClick={() => handleDelete(admin._id)}>\n                              <DeleteForever />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                    }\n                  </TableBody>\n                )\n              }\n              {\n                loading && <div className=\"absolute left-0 right-0 flex items-center justify-center lg:-left-1/2\"><CircularProgress /></div>\n              }\n            </Table>\n          </TableContainer>\n          <div className=\"flex justify-end w-full gap-12 mt-16\">\n            <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n              <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n            </IconButton>\n            <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allAdmins ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n              <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n            </IconButton>\n          </div>\n        </div>\n      </Grid>\n      <Grid item xs={12} md={6} className=\"flex flex-col gap-9\">\n        <Typography className=\"text-3xl text-gray-400\" style={{ minHeight: '38px' }}>About Us</Typography>\n        {\n          aboutUsQuery.loading && <div className=\"relative inset-0 flex items-center justify-center\"><CircularProgress /></div>\n        }\n        {\n          !aboutUsQuery.loading && (\n            <AboutUs\n              ourStory={aboutUsQuery.data?.aboutUs.ourStory}\n              whoWeAre={aboutUsQuery.data?.aboutUs.whoWeAre}\n            />\n          )\n        }\n      </Grid>\n    </Grid>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Button,\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Visibility,\n  DeleteForever,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport { MEMBERS, DELETE_MEMBER } from '../../graphqlQueries';\n\nexport default function TeamMembers() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(MEMBERS, { variables: { offset, limit: 10 }, fetchPolicy: 'cache-and-network' });\n  const [deleteMember] = useMutation(DELETE_MEMBER, { refetchQueries: [{ query: MEMBERS }] });\n  function handleDelete(_id) {\n    deleteMember({ variables: { id: Number(_id) } })\n      .then(() => dispatch(addToast({ message: 'Member deleted successfully', severity: 'success' })))\n      .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n  }\n  function nextPage() {\n    if (data && offset < data.allMembers) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Team</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-9\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button variant=\"contained\" className=\"h-full px-9 shadow-primaryGlow\" onClick={() => dispatch(setCurrentTab({ name: 'addMember', data: null }))}>Add members</Button>\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Name</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Role</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-center text-gray-400\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && data && (\n              <TableBody>\n                {\n                  data?.members.filter(\n                    (member) => member.name.toLowerCase().includes(searchValue),\n                  ).map((member) => (\n                    <TableRow key={member.id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{member._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{member.name}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{member.role}</TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton onClick={() => dispatch(setCurrentTab({ name: 'editMember', data: member }))}>\n                          <Visibility />\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(Number(member._id))}>\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allMembers ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { NEW_MEMBER, MEMBERS, COUNT_ALL } from '../../graphqlQueries';\n\nasync function getBase64Image(img) {\n  if (!img) return '';\n  // const res = {};\n  const fd = new FormData();\n  fd.append('image', img);\n  const result = await (await fetch(`${process.env.REACT_APP_BACKEND_URL}/utilities/image-to-uri`, {\n    method: 'POST',\n    body: fd,\n  })).json();\n  return result;\n}\n\nexport default function AddMember() {\n  const dispatch = useDispatch();\n  const [newMember, { loading }] = useMutation(\n    NEW_MEMBER, { refetchQueries: [{ query: MEMBERS }, { query: COUNT_ALL }] },\n  );\n  // Form requirements\n  const imgRef = React.useRef();\n  const urlRegex = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n  const schema = yup.object({\n    image: yup.mixed().required('Image is required').test('fileSize', 'File should not be larger than 800kb', (value) => {\n      if (!value) return true;\n      return value.size <= 819200;\n    }),\n    name: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    role: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    facebookLink: yup.string().matches(urlRegex, 'Not a valid link').required('Facebook link is required'),\n    instagramLink: yup.string().matches(urlRegex, 'Not a valid link').required('Instagram link is required'),\n    linkedinLink: yup.string().matches(urlRegex, 'Not a valid link').required('Linkedin link is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      role: '',\n      facebookLink: '',\n      instagramLink: '',\n      linkedinLink: '',\n    },\n    validationSchema: schema,\n    onSubmit: async (values) => {\n      const result = await getBase64Image(imgRef.current.files[0]);\n      newMember(\n        { variables: { ...values, image: result.imageURI } },\n      )\n        .then(() => dispatch(addToast({ message: 'Member added successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n    },\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Add Member</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n          <img\n            className=\"self-center w-full max-w-xs\"\n            id=\"profile\"\n            src={imgRef && (\n              imgRef.current && (\n                imgRef.current.files[0] && (\n                  URL.createObjectURL(imgRef.current.files[0])\n                )\n              )\n            )}\n            alt=\"preview\"\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            ref={imgRef}\n            onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n          />\n          {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n        </div>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Name\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Role\"\n          name=\"role\"\n          value={formik.values.role}\n          onChange={formik.handleChange}\n          error={formik.touched.role && Boolean(formik.errors.role)}\n          helperText={formik.touched.role && formik.errors.role}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Facebook link\"\n          name=\"facebookLink\"\n          value={formik.values.facebookLink}\n          onChange={formik.handleChange}\n          error={formik.touched.facebookLink && Boolean(formik.errors.facebookLink)}\n          helperText={formik.touched.facebookLink && formik.errors.facebookLink}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Instagram link\"\n          name=\"instagramLink\"\n          value={formik.values.instagramLink}\n          onChange={formik.handleChange}\n          error={formik.touched.instagramLink && Boolean(formik.errors.instagramLink)}\n          helperText={formik.touched.instagramLink && formik.errors.instagramLink}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"LinkedIn link\"\n          name=\"linkedinLink\"\n          value={formik.values.linkedinLink}\n          onChange={formik.handleChange}\n          error={formik.touched.linkedinLink && Boolean(formik.errors.linkedinLink)}\n          helperText={formik.touched.linkedinLink && formik.errors.linkedinLink}\n        />\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Add'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addToast } from '../../redux/toastsActions';\n\nimport { UPDATE_MEMBER, MEMBERS, COUNT_ALL } from '../../graphqlQueries';\n\nasync function getBase64Image(img) {\n  if (!img) return '';\n  // const res = {};\n  const fd = new FormData();\n  fd.append('image', img);\n  const result = await (await fetch(`${process.env.REACT_APP_BACKEND_URL}/utilities/image-to-uri`, {\n    method: 'POST',\n    body: fd,\n  })).json();\n  return result;\n}\n\nexport default function EditMember({ member }) {\n  const dispatch = useDispatch();\n  const [updateMember, { loading }] = useMutation(\n    UPDATE_MEMBER, { refetchQueries: [{ query: MEMBERS }, { query: COUNT_ALL }] },\n  );\n  // Form requirements\n  const imgRef = React.useRef();\n  const urlRegex = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n  const schema = yup.object({\n    image: yup.mixed().required('Image is required').test('fileSize', 'File should not be larger than 800kb', (value) => {\n      if (!value) return true;\n      return value.size <= 819200;\n    }),\n    name: yup.string().required('First name is required').min(2, 'Enter at least 2 characters'),\n    role: yup.string().required('Last name is required').min(2, 'Enter at least 2 characters'),\n    facebookLink: yup.string().matches(urlRegex, 'Not a valid link').required('Facebook link is required'),\n    instagramLink: yup.string().matches(urlRegex, 'Not a valid link').required('Instagram link is required'),\n    linkedinLink: yup.string().matches(urlRegex, 'Not a valid link').required('Linkedin link is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      ...member,\n    },\n    validationSchema: schema,\n    onSubmit: async (values) => {\n      const result = await getBase64Image(imgRef.current.files[0]);\n      updateMember(\n        { variables: { ...values, id: Number(member._id), image: result.imageURI } },\n      )\n        .then(() => dispatch(addToast({ message: 'Member updated successfully', severity: 'success' })))\n        .catch((r) => dispatch(addToast({ message: r.message, severity: 'error' })));\n    },\n  });\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">Edit Member</Typography>\n      </div>\n      <Card className=\"flex flex-col w-full gap-12 p-14\" elevation={6} component=\"form\" onSubmit={formik.handleSubmit}>\n        <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n          <img\n            className=\"self-center w-full max-w-xs\"\n            id=\"profile\"\n            src={(imgRef && (\n              imgRef.current && (\n                imgRef.current.files[0] && (\n                  URL.createObjectURL(imgRef.current.files[0])\n                )\n              )\n            )) || member.image}\n            alt=\"preview\"\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            ref={imgRef}\n            onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n          />\n          {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n        </div>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Name\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Role\"\n          name=\"role\"\n          value={formik.values.role}\n          onChange={formik.handleChange}\n          error={formik.touched.role && Boolean(formik.errors.role)}\n          helperText={formik.touched.role && formik.errors.role}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Facebook link\"\n          name=\"facebookLink\"\n          value={formik.values.facebookLink}\n          onChange={formik.handleChange}\n          error={formik.touched.facebookLink && Boolean(formik.errors.facebookLink)}\n          helperText={formik.touched.facebookLink && formik.errors.facebookLink}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"Instagram link\"\n          name=\"instagramLink\"\n          value={formik.values.instagramLink}\n          onChange={formik.handleChange}\n          error={formik.touched.instagramLink && Boolean(formik.errors.instagramLink)}\n          helperText={formik.touched.instagramLink && formik.errors.instagramLink}\n        />\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          required\n          label=\"LinkedIn link\"\n          name=\"linkedinLink\"\n          value={formik.values.linkedinLink}\n          onChange={formik.handleChange}\n          error={formik.touched.linkedinLink && Boolean(formik.errors.linkedinLink)}\n          helperText={formik.touched.linkedinLink && formik.errors.linkedinLink}\n        />\n        <Button type=\"submit\" variant=\"contained\" disabled={loading} style={{ maxHeight: '38px' }} className=\"self-start w-3/12 py-3 px-9 shadow-primaryGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : 'Update'\n          }\n        </Button>\n      </Card>\n    </div>\n  );\n}\n\nEditMember.propTypes = {\n  member: PropTypes.shape({\n    _id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    facebookLink: PropTypes.string.isRequired,\n    instagramLink: PropTypes.string.isRequired,\n    linkedinLink: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  InputAdornment,\n  TextField,\n  Typography,\n  TableContainer,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  ChevronLeft, ChevronRight, Visibility, DeleteForever,\n} from '@mui/icons-material';\n\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\n\nimport Search from '../../assets/Search.svg';\n\nimport {\n  USERS, REPORTS, RATINGS, FACULTIES, DELETE_REPORT,\n} from '../../graphqlQueries';\nimport { addToast } from '../../redux/toastsActions';\n\nexport default function Reports() {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = React.useState(0);\n  const [searchValue, setSearchValue] = React.useState('');\n  const { loading, data } = useQuery(REPORTS, { fetchPolicy: 'cache-and-network', variables: { offset, limit: 10 } });\n  const ratingsQuery = useQuery(RATINGS);\n  const usersQuery = useQuery(USERS);\n  const facultiesQuery = useQuery(FACULTIES);\n  const [deleteReport] = useMutation(\n    DELETE_REPORT,\n    {\n      refetchQueries: [\n        { query: REPORTS }, { query: USERS }, { query: FACULTIES }, { query: RATINGS },\n      ],\n    },\n  );\n  function nextPage() {\n    if (data && offset < data.allReports) {\n      setOffset((off) => off + 10);\n    }\n  }\n  function prevPage() {\n    if (data && offset > 0) {\n      setOffset((off) => off - 10);\n    }\n  }\n  function hanldeReportDelete(id) {\n    deleteReport({ variables: { id: Number(id) } })\n      .then(() => dispatch(addToast({ message: 'Report deleted successfully', severity: 'success' })))\n      .catch((e) => dispatch(addToast({ message: e.message, severity: 'error' })));\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-9\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\" style={{ maxHeight: '38px' }}>\n        <Typography className=\"ml-16 text-3xl text-gray-400\">Reports</Typography>\n        <div className=\"flex-grow\" />\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value.toLowerCase())}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={Search} alt=\"search icon\" className=\"h-8\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <TableContainer className=\"w-full max-h-full bg-white mt-14 md:mt-0\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Summary</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">User</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-gray-400\">Rating ID</TableCell>\n              <TableCell className=\"font-semibold leading-9 text-center text-gray-400\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          {\n            !loading && !ratingsQuery.loading && !usersQuery.loading && !facultiesQuery.loading\n            && data && (\n              <TableBody>\n                {\n                  data?.reports.filter(\n                    (rpt) => rpt.summary.toLowerCase().includes(searchValue),\n                  ).map((r) => (\n                    <TableRow key={r._id} className=\"hover:shadow-md\">\n                      <TableCell className=\"m-3 leading-9 text-gray-400\">{r._id}</TableCell>\n                      <TableCell className=\"text-lg font-semibold text-black\">{r.summary}</TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">\n                        {\n                          usersQuery.data.users.find(\n                            (u) => Number(u._id) === Number(r.user),\n                          )?.firstName || 'N/A'\n                        }\n                      </TableCell>\n                      <TableCell className=\"leading-9 text-gray-400\">{r.rating}</TableCell>\n                      <TableCell className=\"text-center\">\n                        <IconButton\n                          className=\"cursor-pointer\"\n                          onClick={() => {\n                            const rating = ratingsQuery.data?.ratings.find(\n                              (rt) => Number(rt._id) === Number(r.rating),\n                            );\n                            if (!rating) {\n                              dispatch(addToast({ message: 'Rating does not exist', severity: 'error' }));\n                              return;\n                            }\n                            const reportingUser = usersQuery.data.users.find(\n                              (u) => Number(u._id) === Number(r.user),\n                            );\n                            if (!reportingUser) {\n                              dispatch(addToast({ message: 'User does not exist', severity: 'error' }));\n                              return;\n                            }\n                            dispatch(setCurrentTab(\n                              {\n                                name: 'viewReport',\n                                data: {\n                                  ...r,\n                                  rating: {\n                                    ...rating,\n                                    user: usersQuery.data.users.find(\n                                      (u) => Number(u._id) === Number(rating.user),\n                                    ),\n                                    faculty: facultiesQuery.data.faculties.find(\n                                      (f) => Number(f._id) === Number(rating.faculty),\n                                    ),\n                                  },\n                                  user: reportingUser,\n                                },\n                              },\n                            ));\n                          }}\n                        >\n                          <Visibility />\n                        </IconButton>\n                        <IconButton onClick={() => hanldeReportDelete(r._id)}>\n                          <DeleteForever />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            )\n          }\n          {\n            loading && <div className=\"absolute inset-x-0 flex items-center justify-center\"><CircularProgress /></div>\n          }\n        </Table>\n      </TableContainer>\n      <div className=\"flex justify-end w-full gap-12 mt-16\">\n        <IconButton className={`rounded-none shadow-lg ${(offset - 10) < 0 ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => prevPage()}>\n          <ChevronLeft className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n        <IconButton className={`rounded-none shadow-lg ${(offset + 10) >= data?.allReports ? 'bg-gray-400' : 'bg-primary'}`} onClick={() => nextPage()}>\n          <ChevronRight className=\"w-10 h-10\" htmlColor=\"white\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Typography,\n  Card,\n  Button,\n  CircularProgress,\n} from '@mui/material';\n\nimport moment from 'moment';\n\nimport { useMutation } from '@apollo/client';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentTab } from '../../redux/adminActions';\nimport { addToast } from '../../redux/toastsActions';\n\nimport {\n  USERS, RATINGS, DELETE_RATING,\n} from '../../graphqlQueries';\n\nexport default function ViewReport({ report }) {\n  const dispatch = useDispatch();\n  const [deleteRating, { loading }] = useMutation(\n    DELETE_RATING,\n    { refetchQueries: [{ query: RATINGS }, { query: USERS }] },\n  );\n  function handleRatingDelete(id) {\n    deleteRating({ variables: { id: Number(id) } })\n      .then(() => {\n        dispatch(addToast({ message: 'Deleted rating successfully', severity: 'success' }));\n        dispatch(setCurrentTab({ name: 'reports', data: null }));\n      })\n      .catch((error) => dispatch(addToast({ message: error.message, severity: 'error' })));\n  }\n  return (\n    <div className=\"flex flex-col w-full gap-3\">\n      <div className=\"flex flex-col w-full gap-2 md:gap-9 md:flex-row md:items-center\">\n        <Typography className=\"ml-16 text-4xl text-gray-500\">{`${report._id} - ${report.summary}`}</Typography>\n        <div className=\"flex-grow\" />\n        <Button variant=\"contained\" disabled={loading} onClick={() => handleRatingDelete(report.rating._id)} color=\"error\" className=\"h-full px-9 shadow-redGlow\">\n          {\n            loading\n              ? <CircularProgress />\n              : `Delete Rating #${report.rating._id}`\n          }\n        </Button>\n      </div>\n      <Card className=\"flex flex-col w-full px-4 py-5 md:px-8\" elevation={6}>\n        <table className=\"pl-2\">\n          <tbody>\n            <tr className=\"border-b\"><Typography variant=\"h5\">Report Details</Typography></tr>\n            <tr>\n              <td className=\"w-3/12\"><Typography>Summary:</Typography></td>\n              <td><Typography>{report.summary}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Details:</Typography></td>\n              <td><Typography>{report.details}</Typography></td>\n            </tr>\n            <tr className=\"border-b\"><Typography variant=\"h5\">Reporting User Details</Typography></tr>\n            <tr>\n              <td className=\"w-3/12\"><Typography>ID:</Typography></td>\n              <td><Typography>{report.user._id}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>First name:</Typography></td>\n              <td><Typography>{report.user.firstName}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Email:</Typography></td>\n              <td><Typography>{report.user.email}</Typography></td>\n            </tr>\n            <tr className=\"border-b\"><Typography variant=\"h5\">Rating Details</Typography></tr>\n            <tr>\n              <td><Typography>ID:</Typography></td>\n              <td><Typography>{report.rating._id}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Rated by:</Typography></td>\n              <td><Typography>{report.rating.user.firstName}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Rating user&apos;s email:</Typography></td>\n              <td><Typography>{report.rating.user.email}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Faculty:</Typography></td>\n              <td><Typography>{report.rating.faculty.firstName}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Faculty email:</Typography></td>\n              <td><Typography>{report.rating.faculty.email}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Course:</Typography></td>\n              <td><Typography>{report.rating.course}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Semester:</Typography></td>\n              <td><Typography>{report.rating.semester}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Rated on:</Typography></td>\n              <td><Typography>{moment(report.rating.createdAt).format('DD-MM-YYYY, HH:MM')}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Likes:</Typography></td>\n              <td><Typography>{report.rating.likes.length}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>Dislikes:</Typography></td>\n              <td><Typography>{report.rating.disLikes.length}</Typography></td>\n            </tr>\n            <tr>\n              <td><Typography>User thoughts:</Typography></td>\n              <td><Typography>{report.rating.thoughts}</Typography></td>\n            </tr>\n          </tbody>\n        </table>\n      </Card>\n    </div>\n  );\n}\n\nViewReport.propTypes = {\n  report: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired,\n    rating: PropTypes.object.isRequired,\n    summary: PropTypes.string.isRequired,\n    details: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\n\nimport {\n  Drawer,\n  IconButton,\n  useMediaQuery,\n} from '@mui/material';\n\nimport { Logout, Menu } from '@mui/icons-material';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Redirect } from 'react-router-dom';\n\nimport { logout } from '../../redux/accountActions';\n\nimport Sidebar from './Sidebar';\nimport Dashboard from './Dashboard';\nimport Users from './Users';\nimport AddUser from './AddUser';\nimport EditUser from './EditUser';\nimport Professors from './Professors';\nimport Institutes from './Institutes';\nimport ViewInstitute from './ViewInstitute';\nimport EditInstitue from './EditInstitute';\nimport AddInstitute from './AddInstitute';\nimport Blogs from './Blogs';\nimport AddAdmin from './AddAdmin';\nimport ViewUser from './ViewUser';\nimport EditProfessor from './EditProfessor';\nimport ViewProfessor from './ViewProfessor';\nimport AddProfessor from './AddProfessor';\nimport EditAdmin from './EditAdmin';\nimport Ads from './Ads';\nimport AllowedEmails from './AllowedEmails';\nimport Faqs from './Faqs';\nimport EditBlog from './EditBlog';\nimport AddBlog from './AddBlog';\nimport Admins from './Admins';\nimport TeamMembers from './TeamMembers';\nimport AddMember from './AddMember';\nimport EditMember from './EditMember';\nimport Reports from './Reports';\nimport ViewReport from './ViewReport';\n\nexport default function Admin() {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const isMediumOrLargerScreen = useMediaQuery((theme) => theme.breakpoints.up('md'));\n  const { admin, account } = useSelector((state) => state);\n  function adminLogout() {\n    sessionStorage.removeItem('token');\n    localStorage.removeItem('token');\n    dispatch(logout());\n  }\n  if (!account.admin) return <Redirect push to=\"/adminlogin\" />;\n  return (\n    <div className=\"flex w-full\">\n      {\n        isMediumOrLargerScreen\n          ? (\n            <div\n              id=\"sidebar\"\n              className={`h-screen ${open ? 'md:w-4/12 lg:w-3/12' : 'w-24'} border-r`}\n              style={{ maxWidth: '256px' }}\n            >\n              <Sidebar isMediumOrLargerScreen setOpen={setOpen} open={open} />\n            </div>\n          )\n          : (\n            <Drawer\n              id=\"lgDrawer\"\n              variant=\"temporary\"\n              open={open}\n              classes={{ paper: 'w-4/6' }}\n            >\n              <Sidebar setOpen={setOpen} open={open} />\n            </Drawer>\n          )\n      }\n      <div id=\"cont\" className=\"flex flex-col flex-grow w-full bg-gray-50\">\n        <div className={`flex items-center px-6 md:pl-6 md:pr-16 bg-white h-14 ${isMediumOrLargerScreen ? 'justify-end' : 'justify-between'}`}>\n          { !isMediumOrLargerScreen\n            && (\n              <IconButton onClick={() => setOpen(!open)}>\n                <Menu />\n              </IconButton>\n            )}\n          <IconButton onClick={() => adminLogout()}><Logout /></IconButton>\n        </div>\n        <div className=\"flex flex-col p-6 overflow-auto md:py-6 md:pl-6 md:pr-10\" style={{ maxHeight: 'calc(100vh - 56px)', minHeight: 'calc(100vh - 56px)' }}>\n          {\n            admin.currentTab.name === 'dashboard' && <Dashboard />\n          }\n          {\n            admin.currentTab.name === 'users' && <Users />\n          }\n          {\n            admin.currentTab.name === 'viewUser' && <ViewUser user={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'addUser' && <AddUser />\n          }\n          {\n            admin.currentTab.name === 'editUser' && <EditUser user={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'professors' && <Professors />\n          }\n          {\n            admin.currentTab.name === 'addProfessor' && <AddProfessor />\n          }\n          {\n            admin.currentTab.name === 'viewProfessor' && <ViewProfessor professor={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'editProfessor' && <EditProfessor professor={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'institutes' && <Institutes />\n          }\n          {\n            admin.currentTab.name === 'viewInstitute' && <ViewInstitute institute={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'editInstitute' && <EditInstitue institute={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'addInstitute' && <AddInstitute />\n          }\n          {\n            admin.currentTab.name === 'blogs' && <Blogs />\n          }\n          {\n            admin.currentTab.name === 'addBlog' && <AddBlog />\n          }\n          {\n            admin.currentTab.name === 'editBlog' && <EditBlog blog={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'reports' && <Reports />\n          }\n          {\n            admin.currentTab.name === 'viewReport' && <ViewReport report={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'admins' && <Admins />\n          }\n          {\n            admin.currentTab.name === 'addAdmin' && <AddAdmin />\n          }\n          {\n            admin.currentTab.name === 'editAdmin' && <EditAdmin admin={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'teamMembers' && <TeamMembers />\n          }\n          {\n            admin.currentTab.name === 'addMember' && <AddMember />\n          }\n          {\n            admin.currentTab.name === 'editMember' && <EditMember member={admin.currentTab.data} />\n          }\n          {\n            admin.currentTab.name === 'ads' && <Ads />\n          }\n          {\n            admin.currentTab.name === 'allowedMails' && <AllowedEmails />\n          }\n          {\n            admin.currentTab.name === 'faqs' && <Faqs />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}